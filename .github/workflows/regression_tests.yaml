name: Regression Tests
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'
        required: true
        type: string
        default: "@regression"
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
        default: "DEV"
      product:
        description: 'The product we are testing'
        type: choice
        options:
          - RAVS
        required: false
        default: RAVS
      id:
        description: 'Unique run identifier (Do not change this)'
        required: false
        default: "Manually Triggered Run"
      pull_request_id:
        description: 'The ID of the pull request. This should be in the format pr-xxxx where xxxx is the pull request id'
        required: false
        default: ""
      github_tag:
        description: 'The github tag to run the test pack from'
        required: false
        default: "main"

jobs:
  regression_tests:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.github_tag }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Clean .tox directory
        run: |
          rm -rf .tox

      - name: Rebuild Tox environments
        run: |
          tox -r  # Forces tox to recreate environments

      - name: Cache Playwright binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright dependencies
        run: |
          playwright install
          playwright install-deps

      - name: Cache Allure Installation
        uses: actions/cache@v4
        with:
          path: /opt/allure-2.17.3
          key: allure-installation-v1

      - name: Install Allure if not cached
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -o allure-commandline-2.17.3.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.17.3/allure-commandline-2.17.3.tgz && \
          tar -zxvf allure-commandline-2.17.3.tgz -C /opt/ && \
          sudo ln -s /opt/allure-2.17.3/bin/allure /usr/bin/allure && \
          rm -rf allure-commandline-2.17.3.tgz

      - name: Verify Allure Installation
        run: allure --version

      - name: Run Tests
        env:
          TEST_ENVIRONMENT: ${{ inputs.environment }}
          RAVS_PASSWORD: ${{ secrets.RAVS_PASSWORD }}
          HEADLESS_MODE: "true"
          BROWSER: "edge"
          MARKER: "logout"
          AGENTS: 3
        run: |
          tox

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          if-no-files-found: error

      - name: Trigger test report generation
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"ref": "main", "inputs": {"run_id": "'${{ GITHUB.RUN_ID }}'"}}' \
          "https://api.github.com/repos/NHSDigital/ravs-test-reports/actions/workflows/publish_report.yml/dispatches"
