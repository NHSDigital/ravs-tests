{
  "uid" : "5d8d78cc95a93b2c",
  "name" : "Record a vaccine with nhs number [10-9474405174-ALBERT HOUSE-Outreach event-yes-today-2-yes-yes-today-PHINEAS FAYLE-4/9/1965-2 DIXON TERRACE, NETHER KELLET, CARNFORTH, LANCS, LA6 1EX-Flu-AUTOMATION-CBQI-19/10/2026]",
  "fullName" : "/app/features/record_a_vaccine_for_patient_with_nhs_number.feature:Record a vaccine with nhs number",
  "historyId" : "a3a4c660d017bf2fa3f72ef7fb2ce224",
  "time" : {
    "start" : 1731678536366,
    "stop" : 1731678570019,
    "duration" : 33653
  },
  "status" : "failed",
  "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
  "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f47aa14f380>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[10-9474405174-ALBERT HOUSE-Outreach event-yes-toda...oday-PHINEAS FAYLE-4/9/1965-2 DIXON TERRACE, NETHER KELLET, CARNFORTH, LANCS, LA6 1EX-Flu-AUTOMATION-CBQI-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 13/11/2024PHINEAS FAYLE', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-CBQI', 'care_model': \"Housebound patient's home\", ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = \"Clinician following the Mental Capacity Act (in the patient's best interests)\"\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Recorder - neelima.guntupalli1+recorder_automated@nhs.net'\nlegal_mechanism = 'Patient Specific Direction (PSD)'\nno_consent_reason = 'Personal Choice'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
    "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f47aa14f380>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[10-9474405174-ALBERT HOUSE-Outreach event-yes-toda...oday-PHINEAS FAYLE-4/9/1965-2 DIXON TERRACE, NETHER KELLET, CARNFORTH, LANCS, LA6 1EX-Flu-AUTOMATION-CBQI-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 13/11/2024PHINEAS FAYLE', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-CBQI', 'care_model': \"Housebound patient's home\", ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = \"Clinician following the Mental Capacity Act (in the patient's best interests)\"\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Recorder - neelima.guntupalli1+recorder_automated@nhs.net'\nlegal_mechanism = 'Patient Specific Direction (PSD)'\nno_consent_reason = 'Personal Choice'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
    "steps" : [ {
      "name" : "Given I login to RAVS and set vaccinator details with ALBERT HOUSE and Outreach event and get patient details for 9474405174 with option 10 and choose to vaccinate with vaccine details as Flu, AUTOMATION-CBQI with 19/10/2026",
      "time" : {
        "start" : 1731678536367,
        "stop" : 1731678540674,
        "duration" : 4307
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "23a9c69ca9dc6aa9",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccines_nav_link.png",
        "source" : "23a9c69ca9dc6aa9.png",
        "type" : "image/png",
        "size" : 46598
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I search for a patient with the NHS number in the find a patient screen",
      "time" : {
        "start" : 1731678540674,
        "stop" : 1731678546628,
        "duration" : 5954
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "384ae4409f130e79",
        "name" : "qa_edge_131.0.2903.48_entered_nhs_number_as9474405174_and_clicked_search_for_patient_button.png",
        "source" : "384ae4409f130e79.png",
        "type" : "image/png",
        "size" : 48605
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I open the patient record by clicking on patient PHINEAS FAYLE",
      "time" : {
        "start" : 1731678546629,
        "stop" : 1731678548928,
        "duration" : 2299
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "4ea201381545e04a",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "4ea201381545e04a.png",
        "type" : "image/png",
        "size" : 48605
      }, {
        "uid" : "3ba4c3ce428a3ac2",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "3ba4c3ce428a3ac2.png",
        "type" : "image/png",
        "size" : 47792
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click choose vaccine button and choose the Flu, AUTOMATION-CBQI with 19/10/2026 and click continue",
      "time" : {
        "start" : 1731678548929,
        "stop" : 1731678560313,
        "duration" : 11384
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e0cc557e59c3ee02",
        "name" : "qa_edge_131.0.2903.48_immunisation_history_records_count_is_20.png",
        "source" : "e0cc557e59c3ee02.png",
        "type" : "image/png",
        "size" : 47792
      }, {
        "uid" : "de99d41dd16b92e6",
        "name" : "qa_edge_131.0.2903.48_clicked_choose_vaccine_button.png",
        "source" : "de99d41dd16b92e6.png",
        "type" : "image/png",
        "size" : 50824
      }, {
        "uid" : "c8a4a00c7b37512f",
        "name" : "qa_edge_131.0.2903.48_clicked_on_patient_PHINEAS FAYLE_and_clicked_choose_vaccine_button.png",
        "source" : "c8a4a00c7b37512f.png",
        "type" : "image/png",
        "size" : 50824
      }, {
        "uid" : "b38c06ae67d7b112",
        "name" : "qa_edge_131.0.2903.48_clicked_delivery_team.png",
        "source" : "b38c06ae67d7b112.png",
        "type" : "image/png",
        "size" : 84166
      }, {
        "uid" : "ab21aedcb61d82bd",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine.png",
        "source" : "ab21aedcb61d82bd.png",
        "type" : "image/png",
        "size" : 57503
      }, {
        "uid" : "db31815c9acc246d",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine_type.png",
        "source" : "db31815c9acc246d.png",
        "type" : "image/png",
        "size" : 58066
      }, {
        "uid" : "b7458867db035cc3",
        "name" : "qa_edge_131.0.2903.48_selected_vaccine_Flu_and_Cell-based Quadrivalent Influenza Vaccine_and_clicked_continue_button.png",
        "source" : "b7458867db035cc3.png",
        "type" : "image/png",
        "size" : 77291
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I assess the patient's yes with the details and date as today-2 and click continue to record consent screen button",
      "time" : {
        "start" : 1731678560313,
        "stop" : 1731678566527,
        "duration" : 6214
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d08bd7a97f2abef7",
        "name" : "qa_edge_131.0.2903.48_clicked_eligible_yes_radiobutton.png",
        "source" : "d08bd7a97f2abef7.png",
        "type" : "image/png",
        "size" : 73294
      }, {
        "uid" : "6e1eb39f175b802",
        "name" : "qa_edge_131.0.2903.48_selected_eligibility_type.png",
        "source" : "6e1eb39f175b802.png",
        "type" : "image/png",
        "size" : 76500
      }, {
        "uid" : "3b9f05f2c13cccb4",
        "name" : "qa_edge_131.0.2903.48_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "3b9f05f2c13cccb4.png",
        "type" : "image/png",
        "size" : 76500
      }, {
        "uid" : "df1719c1caeffb39",
        "name" : "qa_edge_131.0.2903.48_set_assessment_date.png",
        "source" : "df1719c1caeffb39.png",
        "type" : "image/png",
        "size" : 76240
      }, {
        "uid" : "354ceb68b5409f2e",
        "name" : "qa_edge_131.0.2903.48_clicked_legal_mechanism.png",
        "source" : "354ceb68b5409f2e.png",
        "type" : "image/png",
        "size" : 75726
      }, {
        "uid" : "5ffd46af5da0d70",
        "name" : "qa_edge_131.0.2903.48_selected_assessing_clinician_with_name_and_council.png",
        "source" : "5ffd46af5da0d70.png",
        "type" : "image/png",
        "size" : 78702
      }, {
        "uid" : "87b9c53c874a1dc0",
        "name" : "qa_edge_131.0.2903.48_clicked_patient_give_vaccine_radio_button.png",
        "source" : "87b9c53c874a1dc0.png",
        "type" : "image/png",
        "size" : 79049
      }, {
        "uid" : "780717f8886c4048",
        "name" : "qa_edge_131.0.2903.48_entered_comments_for_assessing_patient.png",
        "source" : "780717f8886c4048.png",
        "type" : "image/png",
        "size" : 77130
      }, {
        "uid" : "71b20844ade9962a",
        "name" : "qa_edge_131.0.2903.48_clicked_continue_to_record_consent_button.png",
        "source" : "71b20844ade9962a.png",
        "type" : "image/png",
        "size" : 43651
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I record yes with the details and click continue to vaccinate button",
      "time" : {
        "start" : 1731678566528,
        "stop" : 1731678570019,
        "duration" : 3491
      },
      "status" : "failed",
      "statusMessage" : "add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
      "statusTrace" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3b720914a2f39d3d",
        "name" : "qa_edge_131.0.2903.48_before_selecting_consent_clinician.png",
        "source" : "3b720914a2f39d3d.png",
        "type" : "image/png",
        "size" : 43651
      }, {
        "uid" : "e44f0245ccc18291",
        "name" : "qa_edge_131.0.2903.48_selected_consent_clinician_with_name_and_council.png",
        "source" : "e44f0245ccc18291.png",
        "type" : "image/png",
        "size" : 46657
      }, {
        "uid" : "3a39d539d3e3d4c7",
        "name" : "qa_edge_131.0.2903.48_clicked_yes_to_consent.png",
        "source" : "3a39d539d3e3d4c7.png",
        "type" : "image/png",
        "size" : 76194
      }, {
        "uid" : "9dfe8658c876bf56",
        "name" : "qa_edge_131.0.2903.48_selected_consent_given_by_from_dropdown.png",
        "source" : "9dfe8658c876bf56.png",
        "type" : "image/png",
        "size" : 79142
      }, {
        "uid" : "71698efbb6b786e3",
        "name" : "qa_edge_131.0.2903.48_entered_person_consenting_details.png",
        "source" : "71698efbb6b786e3.png",
        "type" : "image/png",
        "size" : 80407
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "8ce597f41ad4bbea",
      "name" : "log",
      "source" : "8ce597f41ad4bbea.txt",
      "type" : "text/plain",
      "size" : 14482
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 26,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d663d667dee7"
  }, {
    "name" : "thread",
    "value" : "1099-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Record vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "2 DIXON TERRACE, NETHER KELLET, CARNFORTH, LANCS, LA6 1EX"
  }, {
    "name" : "assess_date",
    "value" : "today-2"
  }, {
    "name" : "batch_expiry_date",
    "value" : "19/10/2026"
  }, {
    "name" : "batch_number",
    "value" : "AUTOMATION-CBQI"
  }, {
    "name" : "care_model",
    "value" : "Outreach event"
  }, {
    "name" : "chosen_vaccine",
    "value" : "Flu"
  }, {
    "name" : "consent",
    "value" : "yes"
  }, {
    "name" : "dob",
    "value" : "4/9/1965"
  }, {
    "name" : "eligibility",
    "value" : "yes"
  }, {
    "name" : "index",
    "value" : "10"
  }, {
    "name" : "name",
    "value" : "PHINEAS FAYLE"
  }, {
    "name" : "nhs_number",
    "value" : "9474405174"
  }, {
    "name" : "site",
    "value" : "ALBERT HOUSE"
  }, {
    "name" : "vaccination",
    "value" : "yes"
  }, {
    "name" : "vaccination_date",
    "value" : "today"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5d8d78cc95a93b2c.json",
  "parameterValues" : [ "2 DIXON TERRACE, NETHER KELLET, CARNFORTH, LANCS, LA6 1EX", "today-2", "19/10/2026", "AUTOMATION-CBQI", "Outreach event", "Flu", "yes", "4/9/1965", "yes", "10", "PHINEAS FAYLE", "9474405174", "ALBERT HOUSE", "yes", "today" ]
}