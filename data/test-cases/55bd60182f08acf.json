{
  "uid" : "55bd60182f08acf",
  "name" : "Demographics: Existing patients can be found using their optional demographic details [9470006739-JANNETTE-ARD-09/12/2015-1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ-LA21 8HZ-Other]",
  "fullName" : "/app/features/find_a_patient.feature:Demographics: Existing patients can be found using their optional demographic details",
  "historyId" : "b4750b4b392cbc1d84a8d365ef74e6d1",
  "time" : {
    "start" : 1730276173735,
    "stop" : 1730276489587,
    "duration" : 315852
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9470006739', True)",
  "statusTrace" : "fixturefunc = <function step_patient_information_page_should_be_available at 0x7f138cd423e0>\nrequest = <FixtureRequest for <Function test_demographics_existing_patients_can_be_found_using_their_optional_demographic_details[9470006739-JANNETTE-ARD-09/12/2015-1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ-LA21 8HZ-Other]>>\nkwargs = {'address': '1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ', 'dob': '09/12/2015', 'name': 'JANNETTE ARD', 'nhsNumber': '9470006739'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'JANNETTE ARD', nhsNumber = '9470006739', dob = '09/12/2015'\naddress = '1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ'\n\n    @then(parse(\"I can see the patient's information in the search results, showing their name: {name}, nhs number: {nhsNumber}, dob: {dob} and address: {address}\"))\n    def step_patient_information_page_should_be_available(name, nhsNumber, dob, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n>       assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE       AssertionError: assert False == True\nE        +  where False = check_patient_nhs_number_search_result_exists('9470006739', True)\n\ntests/test_find_a_patient_steps.py:174: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9470006739', True)",
    "statusTrace" : "fixturefunc = <function step_patient_information_page_should_be_available at 0x7f138cd423e0>\nrequest = <FixtureRequest for <Function test_demographics_existing_patients_can_be_found_using_their_optional_demographic_details[9470006739-JANNETTE-ARD-09/12/2015-1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ-LA21 8HZ-Other]>>\nkwargs = {'address': '1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ', 'dob': '09/12/2015', 'name': 'JANNETTE ARD', 'nhsNumber': '9470006739'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'JANNETTE ARD', nhsNumber = '9470006739', dob = '09/12/2015'\naddress = '1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ'\n\n    @then(parse(\"I can see the patient's information in the search results, showing their name: {name}, nhs number: {nhsNumber}, dob: {dob} and address: {address}\"))\n    def step_patient_information_page_should_be_available(name, nhsNumber, dob, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n>       assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE       AssertionError: assert False == True\nE        +  where False = check_patient_nhs_number_search_result_exists('9470006739', True)\n\ntests/test_find_a_patient_steps.py:174: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1730276173736,
        "stop" : 1730276316808,
        "duration" : 143072
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the mandatory patient details JANNETTE, ARD, and 09/12/2015",
      "time" : {
        "start" : 1730276316808,
        "stop" : 1730276418363,
        "duration" : 101555
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "6796d8bf51d5eec",
        "name" : "dev_chrome_130.0.6723.91_add_mandatory_patient_information.png",
        "source" : "6796d8bf51d5eec.png",
        "type" : "image/png",
        "size" : 56101
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I enter the postcode LA21 8HZ",
      "time" : {
        "start" : 1730276418363,
        "stop" : 1730276438728,
        "duration" : 20365
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "7d26f7dd53c3a201",
        "name" : "dev_chrome_130.0.6723.91_enter_invalid_postcode.png",
        "source" : "7d26f7dd53c3a201.png",
        "type" : "image/png",
        "size" : 56101
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I select the gender Other",
      "time" : {
        "start" : 1730276438729,
        "stop" : 1730276459094,
        "duration" : 20365
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "aca3a7fa1bc9b23f",
        "name" : "dev_chrome_130.0.6723.91_select_gender.png",
        "source" : "aca3a7fa1bc9b23f.png",
        "type" : "image/png",
        "size" : 56101
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the search button",
      "time" : {
        "start" : 1730276459095,
        "stop" : 1730276479389,
        "duration" : 20294
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see the patient's information in the search results, showing their name: JANNETTE ARD, nhs number: 9470006739, dob: 09/12/2015 and address: 1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ",
      "time" : {
        "start" : 1730276479390,
        "stop" : 1730276489587,
        "duration" : 10197
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9470006739', True)",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9470006739', True)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "bd76cdfb3d99f859",
        "name" : "dev_chrome_130.0.6723.91_patient_information_page_should_be_visible.png",
        "source" : "bd76cdfb3d99f859.png",
        "type" : "image/png",
        "size" : 56101
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "8d4875ef7105b204",
      "name" : "log",
      "source" : "8d4875ef7105b204.txt",
      "type" : "text/plain",
      "size" : 3481
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "ffdd1db22aac"
  }, {
    "name" : "thread",
    "value" : "1103-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ"
  }, {
    "name" : "dob",
    "value" : "09/12/2015"
  }, {
    "name" : "firstName",
    "value" : "JANNETTE"
  }, {
    "name" : "gender",
    "value" : "Other"
  }, {
    "name" : "lastName",
    "value" : "ARD"
  }, {
    "name" : "nhsNumber",
    "value" : "9470006739"
  }, {
    "name" : "postcode",
    "value" : "LA21 8HZ"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "55bd60182f08acf.json",
  "parameterValues" : [ "1 ST. MARTINS COURT, CONISTON, CUMBRIA, LA21 8HZ", "09/12/2015", "JANNETTE", "Other", "ARD", "9470006739", "LA21 8HZ" ]
}