{
  "uid" : "354d158d5029e06e",
  "name" : "Record a vaccine with nhs number [2-9470040228-BIRCH HOUSE-Hospital hub for staff and patients-yes-today-1-yes-yes-today-HERBERT HAAG-14/12/1922-10 COASTAL ROAD, HEST BANK, LANCASTER, LA2 6HN-COVID-19-AUTOMATION-C10-19/2/2026]",
  "fullName" : "/app/features/record_a_vaccine_for_patient_with_nhs_number.feature:Record a vaccine with nhs number",
  "historyId" : "6210f73bbcde7fc900a2557932f395eb",
  "time" : {
    "start" : 1731678385051,
    "stop" : 1731678419795,
    "duration" : 34744
  },
  "status" : "failed",
  "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
  "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f32804e7ce0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[2-9470040228-BIRCH HOUSE-Hospital hub for staff an...s-yes-today-HERBERT HAAG-14/12/1922-10 COASTAL ROAD, HEST BANK, LANCASTER, LA2 6HN-COVID-19-AUTOMATION-C10-19/2/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 14/11/2024HERBERT HAAG', 'batch_expiry_date': '19/2/2026', 'batch_number': 'AUTOMATION-C10', 'care_model': 'Community Pharmacy', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes', consent_given_by = 'Court appointed deputy'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Patient Specific Direction (PSD)'\nno_consent_reason = 'Personal Choice'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
    "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f32804e7ce0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[2-9470040228-BIRCH HOUSE-Hospital hub for staff an...s-yes-today-HERBERT HAAG-14/12/1922-10 COASTAL ROAD, HEST BANK, LANCASTER, LA2 6HN-COVID-19-AUTOMATION-C10-19/2/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 14/11/2024HERBERT HAAG', 'batch_expiry_date': '19/2/2026', 'batch_number': 'AUTOMATION-C10', 'care_model': 'Community Pharmacy', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes', consent_given_by = 'Court appointed deputy'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Patient Specific Direction (PSD)'\nno_consent_reason = 'Personal Choice'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
    "steps" : [ {
      "name" : "Given I login to RAVS and set vaccinator details with BIRCH HOUSE and Hospital hub for staff and patients and get patient details for 9470040228 with option 2 and choose to vaccinate with vaccine details as COVID-19, AUTOMATION-C10 with 19/2/2026",
      "time" : {
        "start" : 1731678385052,
        "stop" : 1731678389587,
        "duration" : 4535
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3e0458c7fbd46acc",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccines_nav_link.png",
        "source" : "3e0458c7fbd46acc.png",
        "type" : "image/png",
        "size" : 46598
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I search for a patient with the NHS number in the find a patient screen",
      "time" : {
        "start" : 1731678389587,
        "stop" : 1731678395469,
        "duration" : 5882
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c37b1f495b06645e",
        "name" : "qa_edge_131.0.2903.48_entered_nhs_number_as9470040228_and_clicked_search_for_patient_button.png",
        "source" : "c37b1f495b06645e.png",
        "type" : "image/png",
        "size" : 48983
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I open the patient record by clicking on patient HERBERT HAAG",
      "time" : {
        "start" : 1731678395469,
        "stop" : 1731678397785,
        "duration" : 2316
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "2d7c9ed2d0c60431",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "2d7c9ed2d0c60431.png",
        "type" : "image/png",
        "size" : 48983
      }, {
        "uid" : "350e2f3d8b00fd1f",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "350e2f3d8b00fd1f.png",
        "type" : "image/png",
        "size" : 54472
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click choose vaccine button and choose the COVID-19, AUTOMATION-C10 with 19/2/2026 and click continue",
      "time" : {
        "start" : 1731678397786,
        "stop" : 1731678409357,
        "duration" : 11571
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "dd28883800713794",
        "name" : "qa_edge_131.0.2903.48_immunisation_history_records_count_is_4.png",
        "source" : "dd28883800713794.png",
        "type" : "image/png",
        "size" : 54472
      }, {
        "uid" : "35b1cc10d8fd865e",
        "name" : "qa_edge_131.0.2903.48_clicked_choose_vaccine_button.png",
        "source" : "35b1cc10d8fd865e.png",
        "type" : "image/png",
        "size" : 81241
      }, {
        "uid" : "7934b93961b5c9d1",
        "name" : "qa_edge_131.0.2903.48_clicked_on_patient_HERBERT HAAG_and_clicked_choose_vaccine_button.png",
        "source" : "7934b93961b5c9d1.png",
        "type" : "image/png",
        "size" : 81241
      }, {
        "uid" : "741c43fe517a76f6",
        "name" : "qa_edge_131.0.2903.48_clicked_delivery_team.png",
        "source" : "741c43fe517a76f6.png",
        "type" : "image/png",
        "size" : 82619
      }, {
        "uid" : "10aef7f829e0146f",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine.png",
        "source" : "10aef7f829e0146f.png",
        "type" : "image/png",
        "size" : 54905
      }, {
        "uid" : "e5d8211283699dfa",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine_type.png",
        "source" : "e5d8211283699dfa.png",
        "type" : "image/png",
        "size" : 55689
      }, {
        "uid" : "473afa1f313c73c0",
        "name" : "qa_edge_131.0.2903.48_selected_vaccine_COVID-19_and_Comirnaty 10 JN.1_and_clicked_continue_button.png",
        "source" : "473afa1f313c73c0.png",
        "type" : "image/png",
        "size" : 75202
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I assess the patient's yes with the details and date as today-1 and click continue to record consent screen button",
      "time" : {
        "start" : 1731678409358,
        "stop" : 1731678416417,
        "duration" : 7059
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9e722622e7a4ceb8",
        "name" : "qa_edge_131.0.2903.48_clicked_eligible_yes_radiobutton.png",
        "source" : "9e722622e7a4ceb8.png",
        "type" : "image/png",
        "size" : 71413
      }, {
        "uid" : "e63eed0c523b1a00",
        "name" : "qa_edge_131.0.2903.48_selected_eligibility_type.png",
        "source" : "e63eed0c523b1a00.png",
        "type" : "image/png",
        "size" : 72185
      }, {
        "uid" : "ac0e350d323f2616",
        "name" : "qa_edge_131.0.2903.48_selected_staff_role.png",
        "source" : "ac0e350d323f2616.png",
        "type" : "image/png",
        "size" : 74405
      }, {
        "uid" : "646ed477c9cae3a7",
        "name" : "qa_edge_131.0.2903.48_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "646ed477c9cae3a7.png",
        "type" : "image/png",
        "size" : 74405
      }, {
        "uid" : "921d539b5c6f63d",
        "name" : "qa_edge_131.0.2903.48_set_assessment_date.png",
        "source" : "921d539b5c6f63d.png",
        "type" : "image/png",
        "size" : 75644
      }, {
        "uid" : "9754ee41dd22d211",
        "name" : "qa_edge_131.0.2903.48_clicked_legal_mechanism.png",
        "source" : "9754ee41dd22d211.png",
        "type" : "image/png",
        "size" : 76643
      }, {
        "uid" : "924a0a5cce7a13fc",
        "name" : "qa_edge_131.0.2903.48_selected_assessing_clinician_with_name_and_council.png",
        "source" : "924a0a5cce7a13fc.png",
        "type" : "image/png",
        "size" : 76643
      }, {
        "uid" : "66e0b392b8d14c",
        "name" : "qa_edge_131.0.2903.48_clicked_patient_give_vaccine_radio_button.png",
        "source" : "66e0b392b8d14c.png",
        "type" : "image/png",
        "size" : 41683
      }, {
        "uid" : "b67fb6d4b026fb8f",
        "name" : "qa_edge_131.0.2903.48_entered_comments_for_assessing_patient.png",
        "source" : "b67fb6d4b026fb8f.png",
        "type" : "image/png",
        "size" : 45239
      }, {
        "uid" : "ed972fc8cf042c85",
        "name" : "qa_edge_131.0.2903.48_clicked_continue_to_record_consent_button.png",
        "source" : "ed972fc8cf042c85.png",
        "type" : "image/png",
        "size" : 42390
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 10,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I record yes with the details and click continue to vaccinate button",
      "time" : {
        "start" : 1731678416418,
        "stop" : 1731678419795,
        "duration" : 3377
      },
      "status" : "failed",
      "statusMessage" : "add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
      "statusTrace" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ad66fdc206681490",
        "name" : "qa_edge_131.0.2903.48_before_selecting_consent_clinician.png",
        "source" : "ad66fdc206681490.png",
        "type" : "image/png",
        "size" : 42390
      }, {
        "uid" : "31256fd9a7bbc416",
        "name" : "qa_edge_131.0.2903.48_selected_consent_clinician_with_name_and_council.png",
        "source" : "31256fd9a7bbc416.png",
        "type" : "image/png",
        "size" : 44539
      }, {
        "uid" : "a88b1f56e328f808",
        "name" : "qa_edge_131.0.2903.48_clicked_yes_to_consent.png",
        "source" : "a88b1f56e328f808.png",
        "type" : "image/png",
        "size" : 74468
      }, {
        "uid" : "e94860e19ddddf65",
        "name" : "qa_edge_131.0.2903.48_selected_consent_given_by_from_dropdown.png",
        "source" : "e94860e19ddddf65.png",
        "type" : "image/png",
        "size" : 75315
      }, {
        "uid" : "82e46685432dc277",
        "name" : "qa_edge_131.0.2903.48_entered_person_consenting_details.png",
        "source" : "82e46685432dc277.png",
        "type" : "image/png",
        "size" : 76476
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4908debfd9aba5d5",
      "name" : "log",
      "source" : "4908debfd9aba5d5.txt",
      "type" : "text/plain",
      "size" : 14884
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 27,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d663d667dee7"
  }, {
    "name" : "thread",
    "value" : "1102-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Record vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "10 COASTAL ROAD, HEST BANK, LANCASTER, LA2 6HN"
  }, {
    "name" : "assess_date",
    "value" : "today-1"
  }, {
    "name" : "batch_expiry_date",
    "value" : "19/2/2026"
  }, {
    "name" : "batch_number",
    "value" : "AUTOMATION-C10"
  }, {
    "name" : "care_model",
    "value" : "Hospital hub for staff and patients"
  }, {
    "name" : "chosen_vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "consent",
    "value" : "yes"
  }, {
    "name" : "dob",
    "value" : "14/12/1922"
  }, {
    "name" : "eligibility",
    "value" : "yes"
  }, {
    "name" : "index",
    "value" : "2"
  }, {
    "name" : "name",
    "value" : "HERBERT HAAG"
  }, {
    "name" : "nhs_number",
    "value" : "9470040228"
  }, {
    "name" : "site",
    "value" : "BIRCH HOUSE"
  }, {
    "name" : "vaccination",
    "value" : "yes"
  }, {
    "name" : "vaccination_date",
    "value" : "today"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "354d158d5029e06e.json",
  "parameterValues" : [ "10 COASTAL ROAD, HEST BANK, LANCASTER, LA2 6HN", "today-1", "19/2/2026", "AUTOMATION-C10", "Hospital hub for staff and patients", "COVID-19", "yes", "14/12/1922", "yes", "2", "HERBERT HAAG", "9470040228", "BIRCH HOUSE", "yes", "today" ]
}