{
  "uid" : "d72a4ab7d0cd670c",
  "name" : "Record a vaccine with nhs number [2-9450141711-BECCLES HOUSE-Housebound patient's home-yes-today-2-yes-yes-today-1-KRISTIA SIDAWAY-24/6/1992-41 BALTIMORE ROAD, LYTHAM ST. ANNES, LANCS, FY8 3NY-Flu-AUTOMATION-IT-19/10/2026]",
  "fullName" : "/app/features/record_a_vaccine_for_patient_with_nhs_number.feature:Record a vaccine with nhs number",
  "historyId" : "ed032380a34a51bd66833e089d0cf08d",
  "time" : {
    "start" : 1731678628794,
    "stop" : 1731678663650,
    "duration" : 34856
  },
  "status" : "failed",
  "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
  "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f7384de74c0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[2-9450141711-BECCLES HOUSE-Housebound patient's ho...s-today-1-KRISTIA SIDAWAY-24/6/1992-41 BALTIMORE ROAD, LYTHAM ST. ANNES, LANCS, FY8 3NY-Flu-AUTOMATION-IT-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 13/11/2024KRISTIA SIDAWAY', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-IT', 'care_model': 'Community Pharmacy', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes', consent_given_by = 'Court appointed deputy'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Patient Specific Direction (PSD)'\nno_consent_reason = 'Personal Choice'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
    "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f7384de74c0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[2-9450141711-BECCLES HOUSE-Housebound patient's ho...s-today-1-KRISTIA SIDAWAY-24/6/1992-41 BALTIMORE ROAD, LYTHAM ST. ANNES, LANCS, FY8 3NY-Flu-AUTOMATION-IT-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 13/11/2024KRISTIA SIDAWAY', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-IT', 'care_model': 'Community Pharmacy', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes', consent_given_by = 'Court appointed deputy'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Patient Specific Direction (PSD)'\nno_consent_reason = 'Personal Choice'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
    "steps" : [ {
      "name" : "Given I login to RAVS and set vaccinator details with BECCLES HOUSE and Housebound patient's home and get patient details for 9450141711 with option 2 and choose to vaccinate with vaccine details as Flu, AUTOMATION-IT with 19/10/2026",
      "time" : {
        "start" : 1731678628794,
        "stop" : 1731678633220,
        "duration" : 4426
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b81f5d2e4a5058b4",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccines_nav_link.png",
        "source" : "b81f5d2e4a5058b4.png",
        "type" : "image/png",
        "size" : 46598
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I search for a patient with the NHS number in the find a patient screen",
      "time" : {
        "start" : 1731678633221,
        "stop" : 1731678639041,
        "duration" : 5820
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "21f32cf9dc37c226",
        "name" : "qa_edge_131.0.2903.48_entered_nhs_number_as9450141711_and_clicked_search_for_patient_button.png",
        "source" : "21f32cf9dc37c226.png",
        "type" : "image/png",
        "size" : 48584
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I open the patient record by clicking on patient KRISTIA SIDAWAY",
      "time" : {
        "start" : 1731678639042,
        "stop" : 1731678641842,
        "duration" : 2800
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "62bb86db005dc7ce",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "62bb86db005dc7ce.png",
        "type" : "image/png",
        "size" : 48584
      }, {
        "uid" : "1a41202acd00d0ee",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "1a41202acd00d0ee.png",
        "type" : "image/png",
        "size" : 52468
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click choose vaccine button and choose the Flu, AUTOMATION-IT with 19/10/2026 and click continue",
      "time" : {
        "start" : 1731678641842,
        "stop" : 1731678653309,
        "duration" : 11467
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d2e6c356a33d0f73",
        "name" : "qa_edge_131.0.2903.48_immunisation_history_records_count_is_4.png",
        "source" : "d2e6c356a33d0f73.png",
        "type" : "image/png",
        "size" : 52468
      }, {
        "uid" : "dafe77bedefdb45f",
        "name" : "qa_edge_131.0.2903.48_clicked_choose_vaccine_button.png",
        "source" : "dafe77bedefdb45f.png",
        "type" : "image/png",
        "size" : 81260
      }, {
        "uid" : "9a97b4f4cc1cbcd8",
        "name" : "qa_edge_131.0.2903.48_clicked_on_patient_KRISTIA SIDAWAY_and_clicked_choose_vaccine_button.png",
        "source" : "9a97b4f4cc1cbcd8.png",
        "type" : "image/png",
        "size" : 81260
      }, {
        "uid" : "5bf4e9fc1757a363",
        "name" : "qa_edge_131.0.2903.48_clicked_delivery_team.png",
        "source" : "5bf4e9fc1757a363.png",
        "type" : "image/png",
        "size" : 82640
      }, {
        "uid" : "ce3ba5b12c9a5218",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine.png",
        "source" : "ce3ba5b12c9a5218.png",
        "type" : "image/png",
        "size" : 57503
      }, {
        "uid" : "264931c7867ed6c5",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine_type.png",
        "source" : "264931c7867ed6c5.png",
        "type" : "image/png",
        "size" : 59191
      }, {
        "uid" : "7fd23304a4630c86",
        "name" : "qa_edge_131.0.2903.48_selected_vaccine_Flu_and_Influenza Tetra MYL_and_clicked_continue_button.png",
        "source" : "7fd23304a4630c86.png",
        "type" : "image/png",
        "size" : 74755
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I assess the patient's yes with the details and date as today-2 and click continue to record consent screen button",
      "time" : {
        "start" : 1731678653310,
        "stop" : 1731678660259,
        "duration" : 6949
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "7c8f3ddb6187a721",
        "name" : "qa_edge_131.0.2903.48_clicked_eligible_yes_radiobutton.png",
        "source" : "7c8f3ddb6187a721.png",
        "type" : "image/png",
        "size" : 70850
      }, {
        "uid" : "d9dee4ca6a557055",
        "name" : "qa_edge_131.0.2903.48_selected_eligibility_type.png",
        "source" : "d9dee4ca6a557055.png",
        "type" : "image/png",
        "size" : 71625
      }, {
        "uid" : "ff273a400c794765",
        "name" : "qa_edge_131.0.2903.48_selected_staff_role.png",
        "source" : "ff273a400c794765.png",
        "type" : "image/png",
        "size" : 73836
      }, {
        "uid" : "9d2744a2915fdc73",
        "name" : "qa_edge_131.0.2903.48_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "9d2744a2915fdc73.png",
        "type" : "image/png",
        "size" : 73836
      }, {
        "uid" : "309b3a9c729883b1",
        "name" : "qa_edge_131.0.2903.48_set_assessment_date.png",
        "source" : "309b3a9c729883b1.png",
        "type" : "image/png",
        "size" : 75094
      }, {
        "uid" : "fd8f3d78ec957b55",
        "name" : "qa_edge_131.0.2903.48_clicked_legal_mechanism.png",
        "source" : "fd8f3d78ec957b55.png",
        "type" : "image/png",
        "size" : 76318
      }, {
        "uid" : "34838683bbb309c",
        "name" : "qa_edge_131.0.2903.48_selected_assessing_clinician_with_name_and_council.png",
        "source" : "34838683bbb309c.png",
        "type" : "image/png",
        "size" : 76318
      }, {
        "uid" : "ade5825d1cc4bdf9",
        "name" : "qa_edge_131.0.2903.48_clicked_patient_give_vaccine_radio_button.png",
        "source" : "ade5825d1cc4bdf9.png",
        "type" : "image/png",
        "size" : 45537
      }, {
        "uid" : "b32b382bd7adaa3e",
        "name" : "qa_edge_131.0.2903.48_entered_comments_for_assessing_patient.png",
        "source" : "b32b382bd7adaa3e.png",
        "type" : "image/png",
        "size" : 50005
      }, {
        "uid" : "55d3a0499feb045c",
        "name" : "qa_edge_131.0.2903.48_clicked_continue_to_record_consent_button.png",
        "source" : "55d3a0499feb045c.png",
        "type" : "image/png",
        "size" : 42637
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 10,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I record yes with the details and click continue to vaccinate button",
      "time" : {
        "start" : 1731678660259,
        "stop" : 1731678663649,
        "duration" : 3390
      },
      "status" : "failed",
      "statusMessage" : "add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
      "statusTrace" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "aa3a974222e8c02a",
        "name" : "qa_edge_131.0.2903.48_before_selecting_consent_clinician.png",
        "source" : "aa3a974222e8c02a.png",
        "type" : "image/png",
        "size" : 42637
      }, {
        "uid" : "fa3017b30e64bcbd",
        "name" : "qa_edge_131.0.2903.48_selected_consent_clinician_with_name_and_council.png",
        "source" : "fa3017b30e64bcbd.png",
        "type" : "image/png",
        "size" : 44865
      }, {
        "uid" : "4ed0bb39abc7dda1",
        "name" : "qa_edge_131.0.2903.48_clicked_yes_to_consent.png",
        "source" : "4ed0bb39abc7dda1.png",
        "type" : "image/png",
        "size" : 73663
      }, {
        "uid" : "5e287f9c0dac9fa2",
        "name" : "qa_edge_131.0.2903.48_selected_consent_given_by_from_dropdown.png",
        "source" : "5e287f9c0dac9fa2.png",
        "type" : "image/png",
        "size" : 74557
      }, {
        "uid" : "1ea99fa1acffc174",
        "name" : "qa_edge_131.0.2903.48_entered_person_consenting_details.png",
        "source" : "1ea99fa1acffc174.png",
        "type" : "image/png",
        "size" : 75714
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "b3ef9ebee41d4980",
      "name" : "log",
      "source" : "b3ef9ebee41d4980.txt",
      "type" : "text/plain",
      "size" : 14869
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 27,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d663d667dee7"
  }, {
    "name" : "thread",
    "value" : "1096-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Record vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "41 BALTIMORE ROAD, LYTHAM ST. ANNES, LANCS, FY8 3NY"
  }, {
    "name" : "assess_date",
    "value" : "today-2"
  }, {
    "name" : "batch_expiry_date",
    "value" : "19/10/2026"
  }, {
    "name" : "batch_number",
    "value" : "AUTOMATION-IT"
  }, {
    "name" : "care_model",
    "value" : "Housebound patient's home"
  }, {
    "name" : "chosen_vaccine",
    "value" : "Flu"
  }, {
    "name" : "consent",
    "value" : "yes"
  }, {
    "name" : "dob",
    "value" : "24/6/1992"
  }, {
    "name" : "eligibility",
    "value" : "yes"
  }, {
    "name" : "index",
    "value" : "2"
  }, {
    "name" : "name",
    "value" : "KRISTIA SIDAWAY"
  }, {
    "name" : "nhs_number",
    "value" : "9450141711"
  }, {
    "name" : "site",
    "value" : "BECCLES HOUSE"
  }, {
    "name" : "vaccination",
    "value" : "yes"
  }, {
    "name" : "vaccination_date",
    "value" : "today-1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d72a4ab7d0cd670c.json",
  "parameterValues" : [ "41 BALTIMORE ROAD, LYTHAM ST. ANNES, LANCS, FY8 3NY", "today-2", "19/10/2026", "AUTOMATION-IT", "Housebound patient's home", "Flu", "yes", "24/6/1992", "yes", "2", "KRISTIA SIDAWAY", "9450141711", "BECCLES HOUSE", "yes", "today-1" ]
}