{
  "uid" : "c0b1858b80b55913",
  "name" : "Record a vaccine with nhs number [1-9693632109-BECCLES HOUSE-Vaccination centre open to the public-yes-today-1-yes-yes-today-1-Bill GARTON-23/6/1946-1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW-COVID-19-AUTOMATION-C30-21/11/2025]",
  "fullName" : "/app/features/record_a_vaccine_for_patient_with_nhs_number.feature:Record a vaccine with nhs number",
  "historyId" : "a7cee18e337649d368d1a881cd9eba0b",
  "time" : {
    "start" : 1731678347061,
    "stop" : 1731678380054,
    "duration" : 32993
  },
  "status" : "failed",
  "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
  "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f32804e7ce0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[1-9693632109-BECCLES HOUSE-Vaccination centre open...-Bill GARTON-23/6/1946-1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW-COVID-19-AUTOMATION-C30-21/11/2025]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 14/11/2024Bill GARTON', 'batch_expiry_date': '21/11/2025', 'batch_number': 'AUTOMATION-C30', 'care_model': 'Vaccination centre open to the public', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = 'Person with parental responsibility'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Recorder - neelima.guntupalli1+recorder_automated@nhs.net'\nlegal_mechanism = 'Patient Group Direction (PGD)', no_consent_reason = 'Other'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
    "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f32804e7ce0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[1-9693632109-BECCLES HOUSE-Vaccination centre open...-Bill GARTON-23/6/1946-1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW-COVID-19-AUTOMATION-C30-21/11/2025]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 14/11/2024Bill GARTON', 'batch_expiry_date': '21/11/2025', 'batch_number': 'AUTOMATION-C30', 'care_model': 'Vaccination centre open to the public', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = 'Person with parental responsibility'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Recorder - neelima.guntupalli1+recorder_automated@nhs.net'\nlegal_mechanism = 'Patient Group Direction (PGD)', no_consent_reason = 'Other'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
    "steps" : [ {
      "name" : "Given I login to RAVS and set vaccinator details with BECCLES HOUSE and Vaccination centre open to the public and get patient details for 9693632109 with option 1 and choose to vaccinate with vaccine details as COVID-19, AUTOMATION-C30 with 21/11/2025",
      "time" : {
        "start" : 1731678347061,
        "stop" : 1731678351442,
        "duration" : 4381
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "577dc204399c57cc",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccines_nav_link.png",
        "source" : "577dc204399c57cc.png",
        "type" : "image/png",
        "size" : 46598
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I search for a patient with the NHS number in the find a patient screen",
      "time" : {
        "start" : 1731678351442,
        "stop" : 1731678357271,
        "duration" : 5829
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a3020f8f07be7bd1",
        "name" : "qa_edge_131.0.2903.48_entered_nhs_number_as9693632109_and_clicked_search_for_patient_button.png",
        "source" : "a3020f8f07be7bd1.png",
        "type" : "image/png",
        "size" : 48905
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I open the patient record by clicking on patient Bill GARTON",
      "time" : {
        "start" : 1731678357272,
        "stop" : 1731678359573,
        "duration" : 2301
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5d1589921022893f",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "5d1589921022893f.png",
        "type" : "image/png",
        "size" : 48905
      }, {
        "uid" : "e90e83c4fb22fa66",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "e90e83c4fb22fa66.png",
        "type" : "image/png",
        "size" : 55637
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click choose vaccine button and choose the COVID-19, AUTOMATION-C30 with 21/11/2025 and click continue",
      "time" : {
        "start" : 1731678359573,
        "stop" : 1731678370987,
        "duration" : 11414
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "1a9198aa5c929268",
        "name" : "qa_edge_131.0.2903.48_immunisation_history_records_count_is_40.png",
        "source" : "1a9198aa5c929268.png",
        "type" : "image/png",
        "size" : 55637
      }, {
        "uid" : "a1a222b83c6ecf53",
        "name" : "qa_edge_131.0.2903.48_clicked_choose_vaccine_button.png",
        "source" : "a1a222b83c6ecf53.png",
        "type" : "image/png",
        "size" : 81570
      }, {
        "uid" : "b051806f430e2580",
        "name" : "qa_edge_131.0.2903.48_clicked_on_patient_Bill GARTON_and_clicked_choose_vaccine_button.png",
        "source" : "b051806f430e2580.png",
        "type" : "image/png",
        "size" : 81570
      }, {
        "uid" : "e69694ec9e3dbf87",
        "name" : "qa_edge_131.0.2903.48_clicked_delivery_team.png",
        "source" : "e69694ec9e3dbf87.png",
        "type" : "image/png",
        "size" : 82949
      }, {
        "uid" : "1fc278b107797d38",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine.png",
        "source" : "1fc278b107797d38.png",
        "type" : "image/png",
        "size" : 54905
      }, {
        "uid" : "48eaebb3186fe69f",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine_type.png",
        "source" : "48eaebb3186fe69f.png",
        "type" : "image/png",
        "size" : 57437
      }, {
        "uid" : "f1c1ade78b179041",
        "name" : "qa_edge_131.0.2903.48_selected_vaccine_COVID-19_and_Comirnaty 30 JN.1_and_clicked_continue_button.png",
        "source" : "f1c1ade78b179041.png",
        "type" : "image/png",
        "size" : 75888
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I assess the patient's yes with the details and date as today-1 and click continue to record consent screen button",
      "time" : {
        "start" : 1731678370988,
        "stop" : 1731678377287,
        "duration" : 6299
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b961d5f6e5c31",
        "name" : "qa_edge_131.0.2903.48_clicked_eligible_yes_radiobutton.png",
        "source" : "b961d5f6e5c31.png",
        "type" : "image/png",
        "size" : 71955
      }, {
        "uid" : "4770faf855e063f0",
        "name" : "qa_edge_131.0.2903.48_selected_eligibility_type.png",
        "source" : "4770faf855e063f0.png",
        "type" : "image/png",
        "size" : 73777
      }, {
        "uid" : "a11fba6665d2a364",
        "name" : "qa_edge_131.0.2903.48_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "a11fba6665d2a364.png",
        "type" : "image/png",
        "size" : 73777
      }, {
        "uid" : "6bb3849120d71174",
        "name" : "qa_edge_131.0.2903.48_set_assessment_date.png",
        "source" : "6bb3849120d71174.png",
        "type" : "image/png",
        "size" : 73376
      }, {
        "uid" : "9c6077e94b06d6d9",
        "name" : "qa_edge_131.0.2903.48_clicked_legal_mechanism.png",
        "source" : "9c6077e94b06d6d9.png",
        "type" : "image/png",
        "size" : 74797
      }, {
        "uid" : "287a6d51d1d43ebc",
        "name" : "qa_edge_131.0.2903.48_selected_assessing_clinician_with_name_and_council.png",
        "source" : "287a6d51d1d43ebc.png",
        "type" : "image/png",
        "size" : 77674
      }, {
        "uid" : "168a38a8f55c387b",
        "name" : "qa_edge_131.0.2903.48_clicked_patient_give_vaccine_radio_button.png",
        "source" : "168a38a8f55c387b.png",
        "type" : "image/png",
        "size" : 50551
      }, {
        "uid" : "781addc700e0271d",
        "name" : "qa_edge_131.0.2903.48_entered_comments_for_assessing_patient.png",
        "source" : "781addc700e0271d.png",
        "type" : "image/png",
        "size" : 54206
      }, {
        "uid" : "b164856ebe5dc159",
        "name" : "qa_edge_131.0.2903.48_clicked_continue_to_record_consent_button.png",
        "source" : "b164856ebe5dc159.png",
        "type" : "image/png",
        "size" : 46963
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I record yes with the details and click continue to vaccinate button",
      "time" : {
        "start" : 1731678377288,
        "stop" : 1731678380054,
        "duration" : 2766
      },
      "status" : "failed",
      "statusMessage" : "add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
      "statusTrace" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "79de09b04194caa6",
        "name" : "qa_edge_131.0.2903.48_before_selecting_consent_clinician.png",
        "source" : "79de09b04194caa6.png",
        "type" : "image/png",
        "size" : 46963
      }, {
        "uid" : "9474803b1a181a30",
        "name" : "qa_edge_131.0.2903.48_clicked_yes_to_consent.png",
        "source" : "9474803b1a181a30.png",
        "type" : "image/png",
        "size" : 74785
      }, {
        "uid" : "298ac95086f23652",
        "name" : "qa_edge_131.0.2903.48_selected_consent_given_by_from_dropdown.png",
        "source" : "298ac95086f23652.png",
        "type" : "image/png",
        "size" : 75991
      }, {
        "uid" : "cc18ca5de451582c",
        "name" : "qa_edge_131.0.2903.48_entered_person_consenting_details.png",
        "source" : "cc18ca5de451582c.png",
        "type" : "image/png",
        "size" : 77202
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 4,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "1510155367ad1f25",
      "name" : "log",
      "source" : "1510155367ad1f25.txt",
      "type" : "text/plain",
      "size" : 13988
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 25,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d663d667dee7"
  }, {
    "name" : "thread",
    "value" : "1102-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Record vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW"
  }, {
    "name" : "assess_date",
    "value" : "today-1"
  }, {
    "name" : "batch_expiry_date",
    "value" : "21/11/2025"
  }, {
    "name" : "batch_number",
    "value" : "AUTOMATION-C30"
  }, {
    "name" : "care_model",
    "value" : "Vaccination centre open to the public"
  }, {
    "name" : "chosen_vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "consent",
    "value" : "yes"
  }, {
    "name" : "dob",
    "value" : "23/6/1946"
  }, {
    "name" : "eligibility",
    "value" : "yes"
  }, {
    "name" : "index",
    "value" : "1"
  }, {
    "name" : "name",
    "value" : "Bill GARTON"
  }, {
    "name" : "nhs_number",
    "value" : "9693632109"
  }, {
    "name" : "site",
    "value" : "BECCLES HOUSE"
  }, {
    "name" : "vaccination",
    "value" : "yes"
  }, {
    "name" : "vaccination_date",
    "value" : "today-1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c0b1858b80b55913.json",
  "parameterValues" : [ "1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW", "today-1", "21/11/2025", "AUTOMATION-C30", "Vaccination centre open to the public", "COVID-19", "yes", "23/6/1946", "yes", "1", "Bill GARTON", "9693632109", "BECCLES HOUSE", "yes", "today-1" ]
}