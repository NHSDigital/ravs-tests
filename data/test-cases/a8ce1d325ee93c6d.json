{
  "uid" : "a8ce1d325ee93c6d",
  "name" : "Demographics: Search without entering patient details shows errors on the mandatory fields [Enter the first name-Enter the last name-Enter the date of birth]",
  "fullName" : "/app/features/find_a_patient.feature:Demographics: Search without entering patient details shows errors on the mandatory fields",
  "historyId" : "ffd87a641da72571b8823162282d2883",
  "time" : {
    "start" : 1729680888537,
    "stop" : 1729680888545,
    "duration" : 8
  },
  "status" : "failed",
  "statusMessage" : "ValueError: Unknown test environment:",
  "statusTrace" : ".0 = <list_iterator object at 0x7fc1c4fb5870>\n\n>   kwargs = {arg: kwargs[arg] if arg in kwargs else request.getfixturevalue(arg) for arg in args}\n\n.tox/py311/lib/python3.11/site-packages/pytest_bdd/scenario.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:1091: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n.tox/py311/lib/python3.11/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n.tox/py311/lib/python3.11/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n.tox/py311/lib/python3.11/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup\n    return (yield)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nconftest.py:106: in navigate_to_ravs\n    url = get_app_url(config[\"test_environment\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntest_environment = ''\n\n    def get_app_url(test_environment):\n        if test_environment is not None and \"dev\" in test_environment:\n            return \"https://www.ravs-dev.england.nhs.uk\"\n        elif test_environment is not None and \"qa\" in test_environment:\n            return \"https://www.ravs-qa.england.nhs.uk\"\n        else:\n>           raise ValueError(f\"Unknown test environment: {test_environment}\")\nE           ValueError: Unknown test environment:\n\ninit_helpers.py:149: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "ValueError: Unknown test environment:",
    "statusTrace" : ".0 = <list_iterator object at 0x7fc1c4fb5870>\n\n>   kwargs = {arg: kwargs[arg] if arg in kwargs else request.getfixturevalue(arg) for arg in args}\n\n.tox/py311/lib/python3.11/site-packages/pytest_bdd/scenario.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:1091: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n.tox/py311/lib/python3.11/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n.tox/py311/lib/python3.11/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n.tox/py311/lib/python3.11/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup\n    return (yield)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nconftest.py:106: in navigate_to_ravs\n    url = get_app_url(config[\"test_environment\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntest_environment = ''\n\n    def get_app_url(test_environment):\n        if test_environment is not None and \"dev\" in test_environment:\n            return \"https://www.ravs-dev.england.nhs.uk\"\n        elif test_environment is not None and \"qa\" in test_environment:\n            return \"https://www.ravs-qa.england.nhs.uk\"\n        else:\n>           raise ValueError(f\"Unknown test environment: {test_environment}\")\nE           ValueError: Unknown test environment:\n\ninit_helpers.py:149: ValueError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1729680888537,
        "stop" : 1729680888545,
        "duration" : 8
      },
      "status" : "failed",
      "statusMessage" : "Unknown test environment: ",
      "statusTrace" : "ValueError: Unknown test environment: \n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "f0c6e87c7942500c",
      "name" : "log",
      "source" : "f0c6e87c7942500c.txt",
      "type" : "text/plain",
      "size" : 378
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "b675d7b0bb1e"
  }, {
    "name" : "thread",
    "value" : "1103-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "dobError",
    "value" : "Enter the date of birth"
  }, {
    "name" : "firstNameError",
    "value" : "Enter the first name"
  }, {
    "name" : "lastNameError",
    "value" : "Enter the last name"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a8ce1d325ee93c6d.json",
  "parameterValues" : [ "Enter the date of birth", "Enter the first name", "Enter the last name" ]
}