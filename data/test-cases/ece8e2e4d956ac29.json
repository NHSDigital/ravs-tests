{
  "uid" : "ece8e2e4d956ac29",
  "name" : "Error messages should appear when no values are entered",
  "fullName" : "/app/features/add_batches.feature:Error messages should appear when no values are entered",
  "historyId" : "9ca872d12287f3fe4e234b76581625b8",
  "time" : {
    "start" : 1731577930677,
    "stop" : 1731577944536,
    "duration" : 13859
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = check_enter_batch_number_error_message_is_displayed()",
  "statusTrace" : "fixturefunc = <function step_then_the_error_messages_for_missing_fields_should_appear at 0x7fb03a58c4a0>\nrequest = <FixtureRequest for <Function test_batch_error_messages_should_appear_when_no_values_are_entered>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then('the error messages and error links should appear highlighting missing required fields')\n    def step_then_the_error_messages_for_missing_fields_should_appear():\n>       assert check_enter_batch_number_error_message_is_displayed()\nE       assert False\nE        +  where False = check_enter_batch_number_error_message_is_displayed()\n\ntests/test_add_vaccine_batches_steps.py:102: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = check_enter_batch_number_error_message_is_displayed()",
    "statusTrace" : "fixturefunc = <function step_then_the_error_messages_for_missing_fields_should_appear at 0x7fb03a58c4a0>\nrequest = <FixtureRequest for <Function test_batch_error_messages_should_appear_when_no_values_are_entered>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then('the error messages and error links should appear highlighting missing required fields')\n    def step_then_the_error_messages_for_missing_fields_should_appear():\n>       assert check_enter_batch_number_error_message_is_displayed()\nE       assert False\nE        +  where False = check_enter_batch_number_error_message_is_displayed()\n\ntests/test_add_vaccine_batches_steps.py:102: AssertionError",
    "steps" : [ {
      "name" : "Given I am logged into the RAVS app",
      "time" : {
        "start" : 1731577930678,
        "stop" : 1731577930678,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When I am on the vaccines page",
      "time" : {
        "start" : 1731577930678,
        "stop" : 1731577934141,
        "duration" : 3463
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click on an available add batch link",
      "time" : {
        "start" : 1731577934142,
        "stop" : 1731577934249,
        "duration" : 107
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click continue to confirm batch details page",
      "time" : {
        "start" : 1731577934250,
        "stop" : 1731577934353,
        "duration" : 103
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then the error messages and error links should appear highlighting missing required fields",
      "time" : {
        "start" : 1731577934354,
        "stop" : 1731577944536,
        "duration" : 10182
      },
      "status" : "failed",
      "statusMessage" : "assert False\n +  where False = check_enter_batch_number_error_message_is_displayed()",
      "statusTrace" : "AssertionError: assert False\n +  where False = check_enter_batch_number_error_message_is_displayed()\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3f92328df154d384",
      "name" : "log",
      "source" : "3f92328df154d384.txt",
      "type" : "text/plain",
      "size" : 1601
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "4ba276c13ad0"
  }, {
    "name" : "thread",
    "value" : "1097-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Add Batches to vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ece8e2e4d956ac29.json",
  "parameterValues" : [ ]
}