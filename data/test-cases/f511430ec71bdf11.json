{
  "uid" : "f511430ec71bdf11",
  "name" : "Record a vaccine with nhs number [9-9437599165-ALBERT HOUSE-Housebound patient's home-yes-today-30-yes-yes-today-30-CAWRDAV BOBBETT-21/7/1959-127 ALINORA CRESCENT, GORING-BY-SEA, WORTHING, W SUSSEX, BN12 4HN-COVID-19-AUTOMATION-C30-19/10/2026]",
  "fullName" : "/app/features/record_a_vaccine_for_patient_with_nhs_number.feature:Record a vaccine with nhs number",
  "historyId" : "e7d797b411d8785818da901f65fdf4c9",
  "time" : {
    "start" : 1731678388047,
    "stop" : 1731678421470,
    "duration" : 33423
  },
  "status" : "failed",
  "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
  "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f7384de74c0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[9-9437599165-ALBERT HOUSE-Housebound patient's hom...BBETT-21/7/1959-127 ALINORA CRESCENT, GORING-BY-SEA, WORTHING, W SUSSEX, BN12 4HN-COVID-19-AUTOMATION-C30-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 16/10/2024CAWRDAV BOBBETT', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-C30', 'care_model': 'Care home', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = 'Independent mental capacity advocate'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Patient Group Direction (PGD)', no_consent_reason = 'Other'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
    "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f7384de74c0>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[9-9437599165-ALBERT HOUSE-Housebound patient's hom...BBETT-21/7/1959-127 ALINORA CRESCENT, GORING-BY-SEA, WORTHING, W SUSSEX, BN12 4HN-COVID-19-AUTOMATION-C30-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 16/10/2024CAWRDAV BOBBETT', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-C30', 'care_model': 'Care home', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = 'Independent mental capacity advocate'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Patient Group Direction (PGD)', no_consent_reason = 'Other'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
    "steps" : [ {
      "name" : "Given I login to RAVS and set vaccinator details with ALBERT HOUSE and Housebound patient's home and get patient details for 9437599165 with option 9 and choose to vaccinate with vaccine details as COVID-19, AUTOMATION-C30 with 19/10/2026",
      "time" : {
        "start" : 1731678388047,
        "stop" : 1731678392516,
        "duration" : 4469
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "dde36be763b9ae1d",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccines_nav_link.png",
        "source" : "dde36be763b9ae1d.png",
        "type" : "image/png",
        "size" : 46598
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I search for a patient with the NHS number in the find a patient screen",
      "time" : {
        "start" : 1731678392516,
        "stop" : 1731678398435,
        "duration" : 5919
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "f6d756f117a0014",
        "name" : "qa_edge_131.0.2903.48_entered_nhs_number_as9437599165_and_clicked_search_for_patient_button.png",
        "source" : "f6d756f117a0014.png",
        "type" : "image/png",
        "size" : 48909
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I open the patient record by clicking on patient CAWRDAV BOBBETT",
      "time" : {
        "start" : 1731678398435,
        "stop" : 1731678400734,
        "duration" : 2299
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d871daf0cbb330a8",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "d871daf0cbb330a8.png",
        "type" : "image/png",
        "size" : 48909
      }, {
        "uid" : "91765926959f3c13",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "91765926959f3c13.png",
        "type" : "image/png",
        "size" : 53959
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click choose vaccine button and choose the COVID-19, AUTOMATION-C30 with 19/10/2026 and click continue",
      "time" : {
        "start" : 1731678400735,
        "stop" : 1731678412380,
        "duration" : 11645
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "57685ccfb34a50bf",
        "name" : "qa_edge_131.0.2903.48_immunisation_history_records_count_is_3.png",
        "source" : "57685ccfb34a50bf.png",
        "type" : "image/png",
        "size" : 53959
      }, {
        "uid" : "b1c5d9c20e3c9cba",
        "name" : "qa_edge_131.0.2903.48_clicked_choose_vaccine_button.png",
        "source" : "b1c5d9c20e3c9cba.png",
        "type" : "image/png",
        "size" : 81680
      }, {
        "uid" : "a2b8fac10fc82a75",
        "name" : "qa_edge_131.0.2903.48_clicked_on_patient_CAWRDAV BOBBETT_and_clicked_choose_vaccine_button.png",
        "source" : "a2b8fac10fc82a75.png",
        "type" : "image/png",
        "size" : 81680
      }, {
        "uid" : "2f87ead193814007",
        "name" : "qa_edge_131.0.2903.48_clicked_delivery_team.png",
        "source" : "2f87ead193814007.png",
        "type" : "image/png",
        "size" : 83033
      }, {
        "uid" : "255cfcf51968ce57",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine.png",
        "source" : "255cfcf51968ce57.png",
        "type" : "image/png",
        "size" : 54905
      }, {
        "uid" : "85e985b8dc843fb8",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine_type.png",
        "source" : "85e985b8dc843fb8.png",
        "type" : "image/png",
        "size" : 57437
      }, {
        "uid" : "2087470804fc622e",
        "name" : "qa_edge_131.0.2903.48_selected_vaccine_COVID-19_and_Comirnaty 30 JN.1_and_clicked_continue_button.png",
        "source" : "2087470804fc622e.png",
        "type" : "image/png",
        "size" : 74793
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I assess the patient's yes with the details and date as today-30 and click continue to record consent screen button",
      "time" : {
        "start" : 1731678412381,
        "stop" : 1731678418701,
        "duration" : 6320
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "fd29028e917deda3",
        "name" : "qa_edge_131.0.2903.48_clicked_eligible_yes_radiobutton.png",
        "source" : "fd29028e917deda3.png",
        "type" : "image/png",
        "size" : 71043
      }, {
        "uid" : "12f2b61002836f56",
        "name" : "qa_edge_131.0.2903.48_selected_eligibility_type.png",
        "source" : "12f2b61002836f56.png",
        "type" : "image/png",
        "size" : 73237
      }, {
        "uid" : "ef999de55e173462",
        "name" : "qa_edge_131.0.2903.48_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "ef999de55e173462.png",
        "type" : "image/png",
        "size" : 73237
      }, {
        "uid" : "730e67b10ae3af70",
        "name" : "qa_edge_131.0.2903.48_set_assessment_date.png",
        "source" : "730e67b10ae3af70.png",
        "type" : "image/png",
        "size" : 73252
      }, {
        "uid" : "68874edf01a63e0b",
        "name" : "qa_edge_131.0.2903.48_clicked_legal_mechanism.png",
        "source" : "68874edf01a63e0b.png",
        "type" : "image/png",
        "size" : 76406
      }, {
        "uid" : "de3bba46d0b5d1de",
        "name" : "qa_edge_131.0.2903.48_selected_assessing_clinician_with_name_and_council.png",
        "source" : "de3bba46d0b5d1de.png",
        "type" : "image/png",
        "size" : 78621
      }, {
        "uid" : "355b34abe6614978",
        "name" : "qa_edge_131.0.2903.48_clicked_patient_give_vaccine_radio_button.png",
        "source" : "355b34abe6614978.png",
        "type" : "image/png",
        "size" : 51207
      }, {
        "uid" : "d9cac9d52b943e3e",
        "name" : "qa_edge_131.0.2903.48_entered_comments_for_assessing_patient.png",
        "source" : "d9cac9d52b943e3e.png",
        "type" : "image/png",
        "size" : 55970
      }, {
        "uid" : "1c5c140ce402638",
        "name" : "qa_edge_131.0.2903.48_clicked_continue_to_record_consent_button.png",
        "source" : "1c5c140ce402638.png",
        "type" : "image/png",
        "size" : 45964
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I record yes with the details and click continue to vaccinate button",
      "time" : {
        "start" : 1731678418702,
        "stop" : 1731678421470,
        "duration" : 2768
      },
      "status" : "failed",
      "statusMessage" : "add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
      "statusTrace" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "985963036fcd2c3f",
        "name" : "qa_edge_131.0.2903.48_before_selecting_consent_clinician.png",
        "source" : "985963036fcd2c3f.png",
        "type" : "image/png",
        "size" : 45964
      }, {
        "uid" : "cc8cb1a9cbb61590",
        "name" : "qa_edge_131.0.2903.48_clicked_yes_to_consent.png",
        "source" : "cc8cb1a9cbb61590.png",
        "type" : "image/png",
        "size" : 74457
      }, {
        "uid" : "36b0c4a6aa8f1213",
        "name" : "qa_edge_131.0.2903.48_selected_consent_given_by_from_dropdown.png",
        "source" : "36b0c4a6aa8f1213.png",
        "type" : "image/png",
        "size" : 75725
      }, {
        "uid" : "d5ebae60773b186f",
        "name" : "qa_edge_131.0.2903.48_entered_person_consenting_details.png",
        "source" : "d5ebae60773b186f.png",
        "type" : "image/png",
        "size" : 76912
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 4,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d0bb5e61e4394832",
      "name" : "log",
      "source" : "d0bb5e61e4394832.txt",
      "type" : "text/plain",
      "size" : 14006
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 25,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d663d667dee7"
  }, {
    "name" : "thread",
    "value" : "1096-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Record vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "127 ALINORA CRESCENT, GORING-BY-SEA, WORTHING, W SUSSEX, BN12 4HN"
  }, {
    "name" : "assess_date",
    "value" : "today-30"
  }, {
    "name" : "batch_expiry_date",
    "value" : "19/10/2026"
  }, {
    "name" : "batch_number",
    "value" : "AUTOMATION-C30"
  }, {
    "name" : "care_model",
    "value" : "Housebound patient's home"
  }, {
    "name" : "chosen_vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "consent",
    "value" : "yes"
  }, {
    "name" : "dob",
    "value" : "21/7/1959"
  }, {
    "name" : "eligibility",
    "value" : "yes"
  }, {
    "name" : "index",
    "value" : "9"
  }, {
    "name" : "name",
    "value" : "CAWRDAV BOBBETT"
  }, {
    "name" : "nhs_number",
    "value" : "9437599165"
  }, {
    "name" : "site",
    "value" : "ALBERT HOUSE"
  }, {
    "name" : "vaccination",
    "value" : "yes"
  }, {
    "name" : "vaccination_date",
    "value" : "today-30"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f511430ec71bdf11.json",
  "parameterValues" : [ "127 ALINORA CRESCENT, GORING-BY-SEA, WORTHING, W SUSSEX, BN12 4HN", "today-30", "19/10/2026", "AUTOMATION-C30", "Housebound patient's home", "COVID-19", "yes", "21/7/1959", "yes", "9", "CAWRDAV BOBBETT", "9437599165", "ALBERT HOUSE", "yes", "today-30" ]
}