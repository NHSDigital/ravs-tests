{
  "uid" : "cf01168927b72cd",
  "name" : "Record a vaccine with nhs number [11-9437541817-BIRCH HOUSE-Vaccination Centre-yes-today-3-yes-yes-today-1-FLORINDA DUNNER-27/3/1957-32 HOLLAND ROAD, MANCHESTER, M8 4NP-COVID-19-AUTOMATION-C3-19/10/2026]",
  "fullName" : "/app/features/record_a_vaccine_for_patient_with_nhs_number.feature:Record a vaccine with nhs number",
  "historyId" : "598866aec03039ff2614bd01d8f0f4e5",
  "time" : {
    "start" : 1731678481191,
    "stop" : 1731678530554,
    "duration" : 49363
  },
  "status" : "failed",
  "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
  "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f47aa14f380>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[11-9437541817-BIRCH HOUSE-Vaccination Centre-yes-today-3-yes-yes-today-1-FLORINDA DUNNER-27/3/1957-32 HOLLAND ROAD, MANCHESTER, M8 4NP-COVID-19-AUTOMATION-C3-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 12/11/2024FLORINDA DUNNER', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-C3', 'care_model': 'Outreach event', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = 'Person with lasting power of attorney for personal welfare'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Written Instruction (WI)'\nno_consent_reason = 'Porcine(Pork)'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
    "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f47aa14f380>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[11-9437541817-BIRCH HOUSE-Vaccination Centre-yes-today-3-yes-yes-today-1-FLORINDA DUNNER-27/3/1957-32 HOLLAND ROAD, MANCHESTER, M8 4NP-COVID-19-AUTOMATION-C3-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 12/11/2024FLORINDA DUNNER', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-C3', 'care_model': 'Outreach event', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = 'Person with lasting power of attorney for personal welfare'\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Administrator - neelima.guntupalli1+administrator_automated@nhs.net'\nlegal_mechanism = 'Written Instruction (WI)'\nno_consent_reason = 'Porcine(Pork)'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
    "steps" : [ {
      "name" : "Given I login to RAVS and set vaccinator details with BIRCH HOUSE and Vaccination Centre and get patient details for 9437541817 with option 11 and choose to vaccinate with vaccine details as COVID-19, AUTOMATION-C3 with 19/10/2026",
      "time" : {
        "start" : 1731678481192,
        "stop" : 1731678485486,
        "duration" : 4294
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "51594529d7516619",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccines_nav_link.png",
        "source" : "51594529d7516619.png",
        "type" : "image/png",
        "size" : 46598
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I search for a patient with the NHS number in the find a patient screen",
      "time" : {
        "start" : 1731678485487,
        "stop" : 1731678491616,
        "duration" : 6129
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3f02b8ce116e2362",
        "name" : "qa_edge_131.0.2903.48_entered_nhs_number_as9437541817_and_clicked_search_for_patient_button.png",
        "source" : "3f02b8ce116e2362.png",
        "type" : "image/png",
        "size" : 48966
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I open the patient record by clicking on patient FLORINDA DUNNER",
      "time" : {
        "start" : 1731678491617,
        "stop" : 1731678493932,
        "duration" : 2315
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "be3c6290b8cd82d7",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "be3c6290b8cd82d7.png",
        "type" : "image/png",
        "size" : 48966
      }, {
        "uid" : "8d183467c53177d",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "8d183467c53177d.png",
        "type" : "image/png",
        "size" : 52539
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click choose vaccine button and choose the COVID-19, AUTOMATION-C3 with 19/10/2026 and click continue",
      "time" : {
        "start" : 1731678493932,
        "stop" : 1731678520559,
        "duration" : 26627
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3aec875944272629",
        "name" : "qa_edge_131.0.2903.48_immunisation_history_records_count_is_0.png",
        "source" : "3aec875944272629.png",
        "type" : "image/png",
        "size" : 52539
      }, {
        "uid" : "de42f7728a5f55d8",
        "name" : "qa_edge_131.0.2903.48_clicked_choose_vaccine_button.png",
        "source" : "de42f7728a5f55d8.png",
        "type" : "image/png",
        "size" : 80843
      }, {
        "uid" : "d447c1550d8e9cb2",
        "name" : "qa_edge_131.0.2903.48_clicked_on_patient_FLORINDA DUNNER_and_clicked_choose_vaccine_button.png",
        "source" : "d447c1550d8e9cb2.png",
        "type" : "image/png",
        "size" : 80843
      }, {
        "uid" : "84d09d5dbcb0a60c",
        "name" : "qa_edge_131.0.2903.48_clicked_delivery_team.png",
        "source" : "84d09d5dbcb0a60c.png",
        "type" : "image/png",
        "size" : 82229
      }, {
        "uid" : "74c92cfa90a0eb77",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine.png",
        "source" : "74c92cfa90a0eb77.png",
        "type" : "image/png",
        "size" : 45645
      }, {
        "uid" : "b787672d1145d76c",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine_type.png",
        "source" : "b787672d1145d76c.png",
        "type" : "image/png",
        "size" : 51064
      }, {
        "uid" : "5d556ff0ebd3f49b",
        "name" : "qa_edge_131.0.2903.48_selected_vaccine_COVID-19_and_Comirnaty 3 JN.1_and_clicked_continue_button.png",
        "source" : "5d556ff0ebd3f49b.png",
        "type" : "image/png",
        "size" : 74806
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I assess the patient's yes with the details and date as today-3 and click continue to record consent screen button",
      "time" : {
        "start" : 1731678520560,
        "stop" : 1731678526998,
        "duration" : 6438
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a33a04a357f8cec6",
        "name" : "qa_edge_131.0.2903.48_clicked_eligible_yes_radiobutton.png",
        "source" : "a33a04a357f8cec6.png",
        "type" : "image/png",
        "size" : 71045
      }, {
        "uid" : "843eae6c17436317",
        "name" : "qa_edge_131.0.2903.48_selected_eligibility_type.png",
        "source" : "843eae6c17436317.png",
        "type" : "image/png",
        "size" : 74191
      }, {
        "uid" : "d100cbd7cb87e7d4",
        "name" : "qa_edge_131.0.2903.48_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "d100cbd7cb87e7d4.png",
        "type" : "image/png",
        "size" : 74191
      }, {
        "uid" : "dce7532660a0e263",
        "name" : "qa_edge_131.0.2903.48_set_assessment_date.png",
        "source" : "dce7532660a0e263.png",
        "type" : "image/png",
        "size" : 73842
      }, {
        "uid" : "45bad95f1dbe0ed1",
        "name" : "qa_edge_131.0.2903.48_clicked_legal_mechanism.png",
        "source" : "45bad95f1dbe0ed1.png",
        "type" : "image/png",
        "size" : 73847
      }, {
        "uid" : "f68c896b33fd988d",
        "name" : "qa_edge_131.0.2903.48_selected_assessing_clinician_with_name_and_council.png",
        "source" : "f68c896b33fd988d.png",
        "type" : "image/png",
        "size" : 76279
      }, {
        "uid" : "52d7a87622ab6ba0",
        "name" : "qa_edge_131.0.2903.48_clicked_patient_give_vaccine_radio_button.png",
        "source" : "52d7a87622ab6ba0.png",
        "type" : "image/png",
        "size" : 76579
      }, {
        "uid" : "b41a42cb7b38ecd6",
        "name" : "qa_edge_131.0.2903.48_entered_comments_for_assessing_patient.png",
        "source" : "b41a42cb7b38ecd6.png",
        "type" : "image/png",
        "size" : 73690
      }, {
        "uid" : "e5735e5fb6f7b0f2",
        "name" : "qa_edge_131.0.2903.48_clicked_continue_to_record_consent_button.png",
        "source" : "e5735e5fb6f7b0f2.png",
        "type" : "image/png",
        "size" : 42102
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I record yes with the details and click continue to vaccinate button",
      "time" : {
        "start" : 1731678526999,
        "stop" : 1731678530554,
        "duration" : 3555
      },
      "status" : "failed",
      "statusMessage" : "add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
      "statusTrace" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "4499666847a993bd",
        "name" : "qa_edge_131.0.2903.48_before_selecting_consent_clinician.png",
        "source" : "4499666847a993bd.png",
        "type" : "image/png",
        "size" : 42102
      }, {
        "uid" : "e6cf1be9b924b22d",
        "name" : "qa_edge_131.0.2903.48_selected_consent_clinician_with_name_and_council.png",
        "source" : "e6cf1be9b924b22d.png",
        "type" : "image/png",
        "size" : 44277
      }, {
        "uid" : "87e3ca9ed5eab6e7",
        "name" : "qa_edge_131.0.2903.48_clicked_yes_to_consent.png",
        "source" : "87e3ca9ed5eab6e7.png",
        "type" : "image/png",
        "size" : 74331
      }, {
        "uid" : "50d3eea052e847c5",
        "name" : "qa_edge_131.0.2903.48_selected_consent_given_by_from_dropdown.png",
        "source" : "50d3eea052e847c5.png",
        "type" : "image/png",
        "size" : 76476
      }, {
        "uid" : "52069a9a3212fcc4",
        "name" : "qa_edge_131.0.2903.48_entered_person_consenting_details.png",
        "source" : "52069a9a3212fcc4.png",
        "type" : "image/png",
        "size" : 77635
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d64e7a04ad1ff753",
      "name" : "log",
      "source" : "d64e7a04ad1ff753.txt",
      "type" : "text/plain",
      "size" : 14454
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 26,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d663d667dee7"
  }, {
    "name" : "thread",
    "value" : "1099-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Record vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "32 HOLLAND ROAD, MANCHESTER, M8 4NP"
  }, {
    "name" : "assess_date",
    "value" : "today-3"
  }, {
    "name" : "batch_expiry_date",
    "value" : "19/10/2026"
  }, {
    "name" : "batch_number",
    "value" : "AUTOMATION-C3"
  }, {
    "name" : "care_model",
    "value" : "Vaccination Centre"
  }, {
    "name" : "chosen_vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "consent",
    "value" : "yes"
  }, {
    "name" : "dob",
    "value" : "27/3/1957"
  }, {
    "name" : "eligibility",
    "value" : "yes"
  }, {
    "name" : "index",
    "value" : "11"
  }, {
    "name" : "name",
    "value" : "FLORINDA DUNNER"
  }, {
    "name" : "nhs_number",
    "value" : "9437541817"
  }, {
    "name" : "site",
    "value" : "BIRCH HOUSE"
  }, {
    "name" : "vaccination",
    "value" : "yes"
  }, {
    "name" : "vaccination_date",
    "value" : "today-1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "cf01168927b72cd.json",
  "parameterValues" : [ "32 HOLLAND ROAD, MANCHESTER, M8 4NP", "today-3", "19/10/2026", "AUTOMATION-C3", "Vaccination Centre", "COVID-19", "yes", "27/3/1957", "yes", "11", "FLORINDA DUNNER", "9437541817", "BIRCH HOUSE", "yes", "today-1" ]
}