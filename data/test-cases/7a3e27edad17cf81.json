{
  "uid" : "7a3e27edad17cf81",
  "name" : "Local: Created patient can be found using local search",
  "fullName" : "/app/features/find_a_patient.feature:Local: Created patient can be found using local search",
  "historyId" : "318f11c97be2b8bb6bebbd84c9bce5b1",
  "time" : {
    "start" : 1729618412127,
    "stop" : 1729618443206,
    "duration" : 31079
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_name_search_result_exists('Naomi Smith', True)",
  "statusTrace" : "fixturefunc = <function step_patient_information_page_should_be_available at 0x7fee908ea8e0>\nrequest = <FixtureRequest for <Function test_local_created_patient_can_be_found_using_local_search>>\nkwargs = {'shared_data': {'dob': '30/4/1922', 'first_name': 'Naomi', 'gender': 'Female', 'last_name': 'Smith', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nshared_data = {'dob': '30/4/1922', 'first_name': 'Naomi', 'gender': 'Female', 'last_name': 'Smith', ...}\n\n    @then(\"I can see the patient's local record in the search results\")\n    def step_patient_information_page_should_be_available(shared_data):\n        attach_screenshot(\"patient_local_record_should_be_visible\")\n        name = f'{shared_data[\"first_name\"]} {shared_data[\"last_name\"]}'\n        dob = shared_data[\"dob\"]\n        postcode = shared_data[\"postcode\"]\n    \n>       assert check_patient_name_search_result_exists(name, True) == True\nE       AssertionError: assert False == True\nE        +  where False = check_patient_name_search_result_exists('Naomi Smith', True)\n\ntests/test_find_a_patient_steps.py:198: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_name_search_result_exists('Naomi Smith', True)",
    "statusTrace" : "fixturefunc = <function step_patient_information_page_should_be_available at 0x7fee908ea8e0>\nrequest = <FixtureRequest for <Function test_local_created_patient_can_be_found_using_local_search>>\nkwargs = {'shared_data': {'dob': '30/4/1922', 'first_name': 'Naomi', 'gender': 'Female', 'last_name': 'Smith', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nshared_data = {'dob': '30/4/1922', 'first_name': 'Naomi', 'gender': 'Female', 'last_name': 'Smith', ...}\n\n    @then(\"I can see the patient's local record in the search results\")\n    def step_patient_information_page_should_be_available(shared_data):\n        attach_screenshot(\"patient_local_record_should_be_visible\")\n        name = f'{shared_data[\"first_name\"]} {shared_data[\"last_name\"]}'\n        dob = shared_data[\"dob\"]\n        postcode = shared_data[\"postcode\"]\n    \n>       assert check_patient_name_search_result_exists(name, True) == True\nE       AssertionError: assert False == True\nE        +  where False = check_patient_name_search_result_exists('Naomi Smith', True)\n\ntests/test_find_a_patient_steps.py:198: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1729618412128,
        "stop" : 1729618417053,
        "duration" : 4925
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I generate random data for a new patient",
      "time" : {
        "start" : 1729618417053,
        "stop" : 1729618417053,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the new patient details on find by demographics page",
      "time" : {
        "start" : 1729618417054,
        "stop" : 1729618427770,
        "duration" : 10716
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a00749688bed9cd4",
        "name" : "dev_chrome_130.0.6723.58_add_mandatory_new_patient_information.png",
        "source" : "a00749688bed9cd4.png",
        "type" : "image/png",
        "size" : 56985
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I click the search button",
      "time" : {
        "start" : 1729618427770,
        "stop" : 1729618428734,
        "duration" : 964
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click the create a new patient button",
      "time" : {
        "start" : 1729618428734,
        "stop" : 1729618430851,
        "duration" : 2117
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the new patient details on create a new patient page",
      "time" : {
        "start" : 1729618430851,
        "stop" : 1729618431350,
        "duration" : 499
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "8d247b0b145a3726",
        "name" : "dev_chrome_130.0.6723.58_add_mandatory_new_patient_information.png",
        "source" : "8d247b0b145a3726.png",
        "type" : "image/png",
        "size" : 34873
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the check and confirm button",
      "time" : {
        "start" : 1729618431350,
        "stop" : 1729618431435,
        "duration" : 85
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can check and confirm the patient information is correct",
      "time" : {
        "start" : 1729618431435,
        "stop" : 1729618431713,
        "duration" : 278
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d17d289456b444c0",
        "name" : "dev_chrome_130.0.6723.58_patient_information_is_correct.png",
        "source" : "d17d289456b444c0.png",
        "type" : "image/png",
        "size" : 37763
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the confirm and save button",
      "time" : {
        "start" : 1729618431713,
        "stop" : 1729618431778,
        "duration" : 65
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see the patient added confirmation message",
      "time" : {
        "start" : 1729618431779,
        "stop" : 1729618432325,
        "duration" : 546
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click the find a patient by local records link",
      "time" : {
        "start" : 1729618432326,
        "stop" : 1729618432400,
        "duration" : 74
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the new patient details",
      "time" : {
        "start" : 1729618432400,
        "stop" : 1729618443018,
        "duration" : 10618
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d28d864883f8c2de",
        "name" : "dev_chrome_130.0.6723.58_add_mandatory_new_patient_information.png",
        "source" : "d28d864883f8c2de.png",
        "type" : "image/png",
        "size" : 43426
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the search button",
      "time" : {
        "start" : 1729618443019,
        "stop" : 1729618443115,
        "duration" : 96
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see the patient's local record in the search results",
      "time" : {
        "start" : 1729618443116,
        "stop" : 1729618443206,
        "duration" : 90
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_patient_name_search_result_exists('Naomi Smith', True)",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_patient_name_search_result_exists('Naomi Smith', True)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "af0980b1d03e0d4e",
        "name" : "dev_chrome_130.0.6723.58_patient_local_record_should_be_visible.png",
        "source" : "af0980b1d03e0d4e.png",
        "type" : "image/png",
        "size" : 31289
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "af304b73d0867422",
      "name" : "log",
      "source" : "af304b73d0867422.txt",
      "type" : "text/plain",
      "size" : 6098
    } ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "attachmentsCount" : 6,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "a5e23b759f44"
  }, {
    "name" : "thread",
    "value" : "1099-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "7a3e27edad17cf81.json",
  "parameterValues" : [ ]
}