{
  "uid" : "b8da8e11b313ceeb",
  "name" : "Demographics: Search does not find existing patients if any of their details are wrong [gender-Bill-Garton-23/6/1946-DN18 5DW-Unknown]",
  "fullName" : "/app/features/find_a_patient.feature:Demographics: Search does not find existing patients if any of their details are wrong",
  "historyId" : "4e7d4313984f5ce5655615810d7d4778",
  "time" : {
    "start" : 1728478203107,
    "stop" : 1728478212699,
    "duration" : 9592
  },
  "status" : "failed",
  "statusMessage" : "TypeError: input_text_into_element() missing 1 required positional argument: 'text'",
  "statusTrace" : "fixturefunc = <function step_enter_postcode at 0x7f88a8a7a660>\nrequest = <FixtureRequest for <Function test_demographics_search_does_not_find_existing_patients_if_any_of_their_details_are_wrong[gender-Bill-Garton-23/6/1946-DN18 5DW-Unknown]>>\nkwargs = {'postcode': 'DN18 5DW'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_find_a_patient_steps.py:234: in step_enter_postcode\n    enter_optional_postcode(postcode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npostcode = 'DN18 5DW'\n\n    def enter_optional_postcode(postcode):\n>       input_text_into_element(POSTCODE_OPTIONAL_INPUT)\nE       TypeError: input_text_into_element() missing 1 required positional argument: 'text'\n\npages/find_a_patient_page.py:81: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: input_text_into_element() missing 1 required positional argument: 'text'",
    "statusTrace" : "fixturefunc = <function step_enter_postcode at 0x7f88a8a7a660>\nrequest = <FixtureRequest for <Function test_demographics_search_does_not_find_existing_patients_if_any_of_their_details_are_wrong[gender-Bill-Garton-23/6/1946-DN18 5DW-Unknown]>>\nkwargs = {'postcode': 'DN18 5DW'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_find_a_patient_steps.py:234: in step_enter_postcode\n    enter_optional_postcode(postcode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npostcode = 'DN18 5DW'\n\n    def enter_optional_postcode(postcode):\n>       input_text_into_element(POSTCODE_OPTIONAL_INPUT)\nE       TypeError: input_text_into_element() missing 1 required positional argument: 'text'\n\npages/find_a_patient_page.py:81: TypeError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1728478203107,
        "stop" : 1728478212402,
        "duration" : 9295
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the mandatory patient details Bill, Garton, and 23/6/1946",
      "time" : {
        "start" : 1728478212402,
        "stop" : 1728478212699,
        "duration" : 297
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "8e70ab9e64c1934e",
        "name" : "dev_chrome_129.0.6668.100_add_mandatory_patient_information.png",
        "source" : "8e70ab9e64c1934e.png",
        "type" : "image/png",
        "size" : 85247
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I enter the postcode DN18 5DW",
      "time" : {
        "start" : 1728478212699,
        "stop" : 1728478212699,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "input_text_into_element() missing 1 required positional argument: 'text'",
      "statusTrace" : "TypeError: input_text_into_element() missing 1 required positional argument: 'text'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "8121528f60b7"
  }, {
    "name" : "thread",
    "value" : "1043-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "dob",
    "value" : "23/6/1946"
  }, {
    "name" : "firstName",
    "value" : "Bill"
  }, {
    "name" : "gender",
    "value" : "Unknown"
  }, {
    "name" : "lastName",
    "value" : "Garton"
  }, {
    "name" : "postcode",
    "value" : "DN18 5DW"
  }, {
    "name" : "scenario",
    "value" : "gender"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b8da8e11b313ceeb.json",
  "parameterValues" : [ "23/6/1946", "Bill", "Unknown", "Garton", "DN18 5DW", "gender" ]
}