{
  "uid" : "4345013d12d963d4",
  "name" : "Search by NHS number [9732596996-Lisa WORTHY-30/6/2024-10 NORTON PARK VIEW, SHEFFIELD, S8 8GS]",
  "fullName" : "/app/features/find_a_patient.feature:Search by NHS number",
  "historyId" : "4ac7128a2d00463c8d57d8ddc85d171c",
  "time" : {
    "start" : 1727779694738,
    "stop" : 1727779819824,
    "duration" : 125086
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9732596996', True)",
  "statusTrace" : "fixturefunc = <function patient_information_page_should_be_available at 0x7fcd38529440>\nrequest = <FixtureRequest for <Function test_search_by_nhs_number[9732596996-Lisa WORTHY-30/6/2024-10 NORTON PARK VIEW, SHEFFIELD, S8 8GS]>>\nkwargs = {'address': '10 NORTON PARK VIEW, SHEFFIELD, S8 8GS', 'dateofbirth': '30/6/2024', 'name': 'Lisa WORTHY', 'nhsNumber': '9732596996'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'Lisa WORTHY', nhsNumber = '9732596996', dateofbirth = '30/6/2024'\naddress = '10 NORTON PARK VIEW, SHEFFIELD, S8 8GS'\n\n    @then(parse(\"I should be directed to the patient's information page and show {name}, {nhsNumber}, {dateofbirth} and {address} details\"))\n    def patient_information_page_should_be_available(name, nhsNumber, dateofbirth, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n        if name.lower() != \"Not found\".lower():\n>           assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE           AssertionError: assert False == True\nE            +  where False = check_patient_nhs_number_search_result_exists('9732596996', True)\n\ntests/test_find_a_patient_steps.py:187: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9732596996', True)",
    "statusTrace" : "fixturefunc = <function patient_information_page_should_be_available at 0x7fcd38529440>\nrequest = <FixtureRequest for <Function test_search_by_nhs_number[9732596996-Lisa WORTHY-30/6/2024-10 NORTON PARK VIEW, SHEFFIELD, S8 8GS]>>\nkwargs = {'address': '10 NORTON PARK VIEW, SHEFFIELD, S8 8GS', 'dateofbirth': '30/6/2024', 'name': 'Lisa WORTHY', 'nhsNumber': '9732596996'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'Lisa WORTHY', nhsNumber = '9732596996', dateofbirth = '30/6/2024'\naddress = '10 NORTON PARK VIEW, SHEFFIELD, S8 8GS'\n\n    @then(parse(\"I should be directed to the patient's information page and show {name}, {nhsNumber}, {dateofbirth} and {address} details\"))\n    def patient_information_page_should_be_available(name, nhsNumber, dateofbirth, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n        if name.lower() != \"Not found\".lower():\n>           assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE           AssertionError: assert False == True\nE            +  where False = check_patient_nhs_number_search_result_exists('9732596996', True)\n\ntests/test_find_a_patient_steps.py:187: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by nhs number page",
      "time" : {
        "start" : 1727779694738,
        "stop" : 1727779789051,
        "duration" : 94313
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3fa41ab5dba4785d",
        "name" : "dev_chrome_129.0.6668.70_user_has_selected_site.png",
        "source" : "3fa41ab5dba4785d.png",
        "type" : "image/png",
        "size" : 59189
      }, {
        "uid" : "bb1701a63a9ad61c",
        "name" : "dev_chrome_129.0.6668.70_user_has_selected_care_model.png",
        "source" : "bb1701a63a9ad61c.png",
        "type" : "image/png",
        "size" : 59189
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I enter a valid 9732596996",
      "time" : {
        "start" : 1727779789051,
        "stop" : 1727779789352,
        "duration" : 301
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click the search button",
      "time" : {
        "start" : 1727779789353,
        "stop" : 1727779789686,
        "duration" : 333
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I should be directed to the patient's information page and show Lisa WORTHY, 9732596996, 30/6/2024 and 10 NORTON PARK VIEW, SHEFFIELD, S8 8GS details",
      "time" : {
        "start" : 1727779789687,
        "stop" : 1727779819824,
        "duration" : 30137
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9732596996', True)",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9732596996', True)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b8266943ac49a69b",
        "name" : "dev_chrome_129.0.6668.70_patient_information_page_should_be_visible.png",
        "source" : "b8266943ac49a69b.png",
        "type" : "image/png",
        "size" : 76602
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "df89cd3d0aac"
  }, {
    "name" : "thread",
    "value" : "1040-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "10 NORTON PARK VIEW, SHEFFIELD, S8 8GS"
  }, {
    "name" : "dateofbirth",
    "value" : "30/6/2024"
  }, {
    "name" : "name",
    "value" : "Lisa WORTHY"
  }, {
    "name" : "nhsNumber",
    "value" : "9732596996"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4345013d12d963d4.json",
  "parameterValues" : [ "10 NORTON PARK VIEW, SHEFFIELD, S8 8GS", "30/6/2024", "Lisa WORTHY", "9732596996" ]
}