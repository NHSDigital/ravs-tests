{
  "uid" : "ca5f0a09b7883105",
  "name" : "Demographics: Search does not find existing patients if any of their details are wrong [gender-Bill-Garton-23/6/1946-DN18 5DW-Female]",
  "fullName" : "/app/features/find_a_patient.feature:Demographics: Search does not find existing patients if any of their details are wrong",
  "historyId" : "bed124ed1de8fe499e3d2b098fb948de",
  "time" : {
    "start" : 1728027695385,
    "stop" : 1728027823207,
    "duration" : 127822
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_create_new_patient_button_exists(True)",
  "statusTrace" : "fixturefunc = <function step_assert_create_new_patient_button_exists at 0x7f2fa1545a80>\nrequest = <FixtureRequest for <Function test_demographics_search_does_not_find_existing_patients_if_any_of_their_details_are_wrong[gender-Bill-Garton-23/6/1946-DN18 5DW-Female]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then(\"I can see an option to create a new patient\")\n    def step_assert_create_new_patient_button_exists():\n        attach_screenshot(\"check_create_new_patient_button_is_visible\")\n>       assert check_create_new_patient_button_exists(True) == True\nE       assert False == True\nE        +  where False = check_create_new_patient_button_exists(True)\n\ntests/test_find_a_patient_steps.py:225: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_create_new_patient_button_exists(True)",
    "statusTrace" : "fixturefunc = <function step_assert_create_new_patient_button_exists at 0x7f2fa1545a80>\nrequest = <FixtureRequest for <Function test_demographics_search_does_not_find_existing_patients_if_any_of_their_details_are_wrong[gender-Bill-Garton-23/6/1946-DN18 5DW-Female]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then(\"I can see an option to create a new patient\")\n    def step_assert_create_new_patient_button_exists():\n        attach_screenshot(\"check_create_new_patient_button_is_visible\")\n>       assert check_create_new_patient_button_exists(True) == True\nE       assert False == True\nE        +  where False = check_create_new_patient_button_exists(True)\n\ntests/test_find_a_patient_steps.py:225: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1728027695386,
        "stop" : 1728027789945,
        "duration" : 94559
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "93ac4ff0aa4d6b98",
        "name" : "qa_chrome_129.0.6668.89_user_has_selected_site.png",
        "source" : "93ac4ff0aa4d6b98.png",
        "type" : "image/png",
        "size" : 59189
      }, {
        "uid" : "367943250cbca48b",
        "name" : "qa_chrome_129.0.6668.89_user_has_selected_care_model.png",
        "source" : "367943250cbca48b.png",
        "type" : "image/png",
        "size" : 59189
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I enter the mandatory patient details Bill, Garton, and 23/6/1946",
      "time" : {
        "start" : 1728027789946,
        "stop" : 1728027791693,
        "duration" : 1747
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5b5983bd6d203a80",
        "name" : "qa_chrome_129.0.6668.89_add_mandatory_patient_information.png",
        "source" : "5b5983bd6d203a80.png",
        "type" : "image/png",
        "size" : 86060
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I enter the postcode DN18 5DW",
      "time" : {
        "start" : 1728027791693,
        "stop" : 1728027792144,
        "duration" : 451
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "44b54b65ed340765",
        "name" : "qa_chrome_129.0.6668.89_enter_postcode.png",
        "source" : "44b54b65ed340765.png",
        "type" : "image/png",
        "size" : 87859
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I select the gender Female",
      "time" : {
        "start" : 1728027792144,
        "stop" : 1728027792576,
        "duration" : 432
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d142aea8851f1ae5",
        "name" : "qa_chrome_129.0.6668.89_select_gender.png",
        "source" : "d142aea8851f1ae5.png",
        "type" : "image/png",
        "size" : 87291
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the search button",
      "time" : {
        "start" : 1728027792577,
        "stop" : 1728027792911,
        "duration" : 334
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see a message that no results are found for the patient",
      "time" : {
        "start" : 1728027792911,
        "stop" : 1728027793067,
        "duration" : 156
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "76776e0f652a35fc",
        "name" : "qa_chrome_129.0.6668.89_no_results_found_should_be_visible.png",
        "source" : "76776e0f652a35fc.png",
        "type" : "image/png",
        "size" : 87083
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I can see an option to create a new patient",
      "time" : {
        "start" : 1728027793067,
        "stop" : 1728027823207,
        "duration" : 30140
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_create_new_patient_button_exists(True)",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_create_new_patient_button_exists(True)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "942bdcfd03282d87",
        "name" : "qa_chrome_129.0.6668.89_check_create_new_patient_button_is_visible.png",
        "source" : "942bdcfd03282d87.png",
        "type" : "image/png",
        "size" : 9994
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 7,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "36111984e217"
  }, {
    "name" : "thread",
    "value" : "1040-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "dob",
    "value" : "23/6/1946"
  }, {
    "name" : "firstName",
    "value" : "Bill"
  }, {
    "name" : "gender",
    "value" : "Female"
  }, {
    "name" : "lastName",
    "value" : "Garton"
  }, {
    "name" : "postcode",
    "value" : "DN18 5DW"
  }, {
    "name" : "scenario",
    "value" : "gender"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ca5f0a09b7883105.json",
  "parameterValues" : [ "23/6/1946", "Bill", "Female", "Garton", "DN18 5DW", "gender" ]
}