{
  "uid" : "2576a0b97267ef7b",
  "name" : "Add batch to vaccine [ALBERT HOUSE-COVID-19-Spikevax JN.1-AB2345-Y7890]",
  "fullName" : "/app/features/add_batches.feature:Add batch to vaccine",
  "historyId" : "813d272b444ac76cadaad21823424bf5",
  "time" : {
    "start" : 1730808755914,
    "stop" : 1730808772342,
    "duration" : 16428
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_batch_already_exists_error_message_is_displayed()",
  "statusTrace" : "fixturefunc = <function batch_already_added_warning_should_exist at 0x7f8060deff60>\nrequest = <FixtureRequest for <Function test_batch_already_added_to_site_warning_should_appear[ALBERT HOUSE-COVID-19-Spikevax JN.1-AB2345-Y7890]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then(\"the batch is already added to site warning should appear\")\n    def batch_already_added_warning_should_exist():\n        attach_screenshot(\"batch_already_added_warning_message_exists\")\n>       assert check_batch_already_exists_error_message_is_displayed() == True\nE       assert False == True\nE        +  where False = check_batch_already_exists_error_message_is_displayed()\n\ntests/test_add_vaccine_batches_steps.py:92: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_batch_already_exists_error_message_is_displayed()",
    "statusTrace" : "fixturefunc = <function batch_already_added_warning_should_exist at 0x7f8060deff60>\nrequest = <FixtureRequest for <Function test_batch_already_added_to_site_warning_should_appear[ALBERT HOUSE-COVID-19-Spikevax JN.1-AB2345-Y7890]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then(\"the batch is already added to site warning should appear\")\n    def batch_already_added_warning_should_exist():\n        attach_screenshot(\"batch_already_added_warning_message_exists\")\n>       assert check_batch_already_exists_error_message_is_displayed() == True\nE       assert False == True\nE        +  where False = check_batch_already_exists_error_message_is_displayed()\n\ntests/test_add_vaccine_batches_steps.py:92: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the RAVS home page",
      "time" : {
        "start" : 1730808755914,
        "stop" : 1730808760799,
        "duration" : 4885
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When I am on the vaccines page",
      "time" : {
        "start" : 1730808760800,
        "stop" : 1730808761420,
        "duration" : 620
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I view product for the existing vaccine in an existing site",
      "time" : {
        "start" : 1730808761420,
        "stop" : 1730808761566,
        "duration" : 146
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter batch number  that already exists and expiry date",
      "time" : {
        "start" : 1730808761566,
        "stop" : 1730808762074,
        "duration" : 508
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "65aefb95109912ec",
        "name" : "dev_chrome_130.0.6723.91_entered_batch_number.png",
        "source" : "65aefb95109912ec.png",
        "type" : "image/png",
        "size" : 30325
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Then the batch is already added to site warning should appear",
      "time" : {
        "start" : 1730808762075,
        "stop" : 1730808772342,
        "duration" : 10267
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_batch_already_exists_error_message_is_displayed()",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_batch_already_exists_error_message_is_displayed()\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "88065e852454c5c7",
        "name" : "dev_chrome_130.0.6723.91_batch_already_added_warning_message_exists.png",
        "source" : "88065e852454c5c7.png",
        "type" : "image/png",
        "size" : 30325
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "a3e42f97b8cc06e4",
      "name" : "log",
      "source" : "a3e42f97b8cc06e4.txt",
      "type" : "text/plain",
      "size" : 2315
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "dcbd111f4c3c"
  }, {
    "name" : "thread",
    "value" : "1099-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Add Batches to vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "batch_number",
    "value" : "AB2345-Y7890"
  }, {
    "name" : "site",
    "value" : "ALBERT HOUSE"
  }, {
    "name" : "vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "vaccine_type",
    "value" : "Spikevax JN.1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "2576a0b97267ef7b.json",
  "parameterValues" : [ "AB2345-Y7890", "ALBERT HOUSE", "COVID-19", "Spikevax JN.1" ]
}