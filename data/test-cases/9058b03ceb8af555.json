{
  "uid" : "9058b03ceb8af555",
  "name" : "Display warning based on age when recording a vaccine [9474335761-3-covid]",
  "fullName" : "features/age_based_warnings.feature:Display warning based on age when recording a vaccine",
  "historyId" : "22a1de94b065efa3dbb7f89e6030e0cb",
  "time" : {
    "start" : 1729235667371,
    "stop" : 1729235990112,
    "duration" : 322741
  },
  "status" : "failed",
  "statusMessage" : "playwright._impl._errors.TimeoutError: Locator.check: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_label(\"Comirnaty 30 JN.1\")",
  "statusTrace" : "fixturefunc = <function step_warning_messages_should_be_displayed at 0x7ff4be9c1f80>\nrequest = <FixtureRequest for <Function test_display_warning_based_on_age_when_recording_a_vaccine[9474335761-3-covid]>>\nkwargs = {'expected_warning_count': '3', 'shared_data': {'assessment_comments': 'Assessment comments 18/10/2024', 'chosen_vaccine': 'COVID-19', 'consent_clinician_details': 'Test Clinicians - test@nhs.net', 'consent_decision': 'yes', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_age_based_warnings_steps.py:111: in step_warning_messages_should_be_displayed\n    click_vaccine_type_radiobutton(vaccine)\npages/choose_vaccines_page.py:32: in click_vaccine_type_radiobutton\n    find_element_with_locator_and_perform_action(element, \"check\")\ninit_helpers.py:173: in find_element_with_locator_and_perform_action\n    return playwright_helper_instance.find_element_with_locator_and_perform_action(element, action, inputValue)\nhelpers/playwrightHelper.py:252: in find_element_with_locator_and_perform_action\n    element.check()\n.tox/py311/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15016: in check\n    self._sync(\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_locator.py:141: in check\n    return await self._frame.check(self._selector, strict=True, **params)\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_frame.py:741: in check\n    await self._channel.send(\"check\", locals_to_params(locals()))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7ff4be93f550>\ncb = <function Channel.send.<locals>.<lambda> at 0x7ff4bd3dfd80>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.check: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for get_by_label(\"Comirnaty 30 JN.1\")\n\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:514: TimeoutError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "playwright._impl._errors.TimeoutError: Locator.check: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_label(\"Comirnaty 30 JN.1\")",
    "statusTrace" : "fixturefunc = <function step_warning_messages_should_be_displayed at 0x7ff4be9c1f80>\nrequest = <FixtureRequest for <Function test_display_warning_based_on_age_when_recording_a_vaccine[9474335761-3-covid]>>\nkwargs = {'expected_warning_count': '3', 'shared_data': {'assessment_comments': 'Assessment comments 18/10/2024', 'chosen_vaccine': 'COVID-19', 'consent_clinician_details': 'Test Clinicians - test@nhs.net', 'consent_decision': 'yes', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_age_based_warnings_steps.py:111: in step_warning_messages_should_be_displayed\n    click_vaccine_type_radiobutton(vaccine)\npages/choose_vaccines_page.py:32: in click_vaccine_type_radiobutton\n    find_element_with_locator_and_perform_action(element, \"check\")\ninit_helpers.py:173: in find_element_with_locator_and_perform_action\n    return playwright_helper_instance.find_element_with_locator_and_perform_action(element, action, inputValue)\nhelpers/playwrightHelper.py:252: in find_element_with_locator_and_perform_action\n    element.check()\n.tox/py311/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15016: in check\n    self._sync(\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_locator.py:141: in check\n    return await self._frame.check(self._selector, strict=True, **params)\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_frame.py:741: in check\n    await self._channel.send(\"check\", locals_to_params(locals()))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7ff4be93f550>\ncb = <function Channel.send.<locals>.<lambda> at 0x7ff4bd3dfd80>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.check: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for get_by_label(\"Comirnaty 30 JN.1\")\n\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:514: TimeoutError",
    "steps" : [ {
      "name" : "Given I am logged into the RAVS app",
      "time" : {
        "start" : 1729235667371,
        "stop" : 1729235675179,
        "duration" : 7808
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When I search for the patient with NHS number 9474335761",
      "time" : {
        "start" : 1729235675180,
        "stop" : 1729235677470,
        "duration" : 2290
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I proceed to record a vaccine for covid for all products",
      "time" : {
        "start" : 1729235677471,
        "stop" : 1729235679101,
        "duration" : 1630
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "7cdcdef8cd776a0a",
        "name" : "qa_chrome_130.0.6723.58_clicked_patient_name.png",
        "source" : "7cdcdef8cd776a0a.png",
        "type" : "image/png",
        "size" : 37338
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Then the system should display the warnings 3",
      "time" : {
        "start" : 1729235679102,
        "stop" : 1729235990112,
        "duration" : 311010
      },
      "status" : "failed",
      "statusMessage" : "Locator.check: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_label(\"Comirnaty 30 JN.1\")\n",
      "statusTrace" : "playwright._impl._errors.TimeoutError: Locator.check: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_label(\"Comirnaty 30 JN.1\")\n\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "f2d2ea44b02b7acc",
        "name" : "qa_chrome_130.0.6723.58_clicked_choose_vaccine_button.png",
        "source" : "f2d2ea44b02b7acc.png",
        "type" : "image/png",
        "size" : 83361
      }, {
        "uid" : "ba2c555d668a5aab",
        "name" : "qa_chrome_130.0.6723.58_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "ba2c555d668a5aab.png",
        "type" : "image/png",
        "size" : 128081
      }, {
        "uid" : "9ba05c64a6076045",
        "name" : "qa_chrome_130.0.6723.58_clicked_patient_give_vaccine_radio_button.png",
        "source" : "9ba05c64a6076045.png",
        "type" : "image/png",
        "size" : 129302
      }, {
        "uid" : "a0d31accb0941204",
        "name" : "qa_chrome_130.0.6723.58_clicked_continue_to_record_consent_button.png",
        "source" : "a0d31accb0941204.png",
        "type" : "image/png",
        "size" : 134004
      }, {
        "uid" : "945d9a6b6b570872",
        "name" : "qa_chrome_130.0.6723.58_before_selecting_consent_clinician.png",
        "source" : "945d9a6b6b570872.png",
        "type" : "image/png",
        "size" : 134004
      }, {
        "uid" : "925f349dfb0d83e3",
        "name" : "qa_chrome_130.0.6723.58_clicked_continue_to_vaccinate_button.png",
        "source" : "925f349dfb0d83e3.png",
        "type" : "image/png",
        "size" : 119955
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 7,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d0c1252f0259"
  }, {
    "name" : "thread",
    "value" : "1043-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Age based warnings"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_warning_count",
    "value" : "3"
  }, {
    "name" : "nhs_number",
    "value" : "9474335761"
  }, {
    "name" : "vaccine_type",
    "value" : "covid"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9058b03ceb8af555.json",
  "parameterValues" : [ "3", "9474335761", "covid" ]
}