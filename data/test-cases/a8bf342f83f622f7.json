{
  "uid" : "a8bf342f83f622f7",
  "name" : "Vaccine already added to site warning should appear [ALBERT HOUSE-COVID-19-Spikevax JN.1]",
  "fullName" : "/app/features/add_vaccines.feature:Vaccine already added to site warning should appear",
  "historyId" : "2dd9d1e1f9645f5bac0867e6fbf3869e",
  "time" : {
    "start" : 1728478091661,
    "stop" : 1728478102570,
    "duration" : 10909
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_vaccine_already_added_warning_message_exists('ALBERT HOUSE', 'Spikevax JN.1')",
  "statusTrace" : "fixturefunc = <function vaccine_already_added_warning_should_exist at 0x7f88a8dbf740>\nrequest = <FixtureRequest for <Function test_Vaccine_already_added_to_site_warning_should_appear[ALBERT HOUSE-COVID-19-Spikevax JN.1]>>\nkwargs = {'shared_data': {'site': 'ALBERT HOUSE', 'vaccineType': 'Spikevax JN.1'}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nshared_data = {'site': 'ALBERT HOUSE', 'vaccineType': 'Spikevax JN.1'}\n\n    @then(\"the vaccine is already added to site warning should appear\")\n    def vaccine_already_added_warning_should_exist(shared_data):\n        attach_screenshot(\"vaccine_already_added_warning_message_exists\")\n>       assert check_vaccine_already_added_warning_message_exists(shared_data['site'], shared_data['vaccineType']) == True\nE       AssertionError: assert False == True\nE        +  where False = check_vaccine_already_added_warning_message_exists('ALBERT HOUSE', 'Spikevax JN.1')\n\ntests/test_add_vaccine_steps.py:65: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_vaccine_already_added_warning_message_exists('ALBERT HOUSE', 'Spikevax JN.1')",
    "statusTrace" : "fixturefunc = <function vaccine_already_added_warning_should_exist at 0x7f88a8dbf740>\nrequest = <FixtureRequest for <Function test_Vaccine_already_added_to_site_warning_should_appear[ALBERT HOUSE-COVID-19-Spikevax JN.1]>>\nkwargs = {'shared_data': {'site': 'ALBERT HOUSE', 'vaccineType': 'Spikevax JN.1'}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nshared_data = {'site': 'ALBERT HOUSE', 'vaccineType': 'Spikevax JN.1'}\n\n    @then(\"the vaccine is already added to site warning should appear\")\n    def vaccine_already_added_warning_should_exist(shared_data):\n        attach_screenshot(\"vaccine_already_added_warning_message_exists\")\n>       assert check_vaccine_already_added_warning_message_exists(shared_data['site'], shared_data['vaccineType']) == True\nE       AssertionError: assert False == True\nE        +  where False = check_vaccine_already_added_warning_message_exists('ALBERT HOUSE', 'Spikevax JN.1')\n\ntests/test_add_vaccine_steps.py:65: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the RAVS home page",
      "time" : {
        "start" : 1728478091662,
        "stop" : 1728478099038,
        "duration" : 7376
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When I am on the vaccines page",
      "time" : {
        "start" : 1728478099038,
        "stop" : 1728478100651,
        "duration" : 1613
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click add vaccine button",
      "time" : {
        "start" : 1728478100651,
        "stop" : 1728478100885,
        "duration" : 234
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I select ALBERT HOUSE, COVID-19, Spikevax JN.1",
      "time" : {
        "start" : 1728478100885,
        "stop" : 1728478102415,
        "duration" : 1530
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then the vaccine is already added to site warning should appear",
      "time" : {
        "start" : 1728478102416,
        "stop" : 1728478102570,
        "duration" : 154
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_vaccine_already_added_warning_message_exists('ALBERT HOUSE', 'Spikevax JN.1')",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_vaccine_already_added_warning_message_exists('ALBERT HOUSE', 'Spikevax JN.1')\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "fc66cd3d2196fae8",
        "name" : "dev_chrome_129.0.6668.100_vaccine_already_added_warning_message_exists.png",
        "source" : "fc66cd3d2196fae8.png",
        "type" : "image/png",
        "size" : 80229
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "8121528f60b7"
  }, {
    "name" : "thread",
    "value" : "1043-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Add vaccine to site"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "site",
    "value" : "ALBERT HOUSE"
  }, {
    "name" : "vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "vaccineType",
    "value" : "Spikevax JN.1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a8bf342f83f622f7.json",
  "parameterValues" : [ "ALBERT HOUSE", "COVID-19", "Spikevax JN.1" ]
}