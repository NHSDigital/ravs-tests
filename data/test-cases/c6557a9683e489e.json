{
  "uid" : "c6557a9683e489e",
  "name" : "Local: Created patient can be found using local search",
  "fullName" : "/app/features/find_a_patient.feature:Local: Created patient can be found using local search",
  "historyId" : "318f11c97be2b8bb6bebbd84c9bce5b1",
  "time" : {
    "start" : 1728478207273,
    "stop" : 1728478221477,
    "duration" : 14204
  },
  "status" : "failed",
  "statusMessage" : "TypeError: input_text_into_element() missing 1 required positional argument: 'text'",
  "statusTrace" : "fixturefunc = <function step_add_mandatory_patient_information at 0x7f66a4886980>\nrequest = <FixtureRequest for <Function test_local_created_patient_can_be_found_using_local_search>>\nkwargs = {'shared_data': {'dob': '14/11/1911', 'first_name': 'Liam', 'gender': 'Female', 'last_name': 'Jackson', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_find_a_patient_steps.py:261: in step_add_mandatory_patient_information\n    enter_optional_postcode(shared_data[\"postcode\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npostcode = 'AB4 1ZR'\n\n    def enter_optional_postcode(postcode):\n>       input_text_into_element(POSTCODE_OPTIONAL_INPUT)\nE       TypeError: input_text_into_element() missing 1 required positional argument: 'text'\n\npages/find_a_patient_page.py:81: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: input_text_into_element() missing 1 required positional argument: 'text'",
    "statusTrace" : "fixturefunc = <function step_add_mandatory_patient_information at 0x7f66a4886980>\nrequest = <FixtureRequest for <Function test_local_created_patient_can_be_found_using_local_search>>\nkwargs = {'shared_data': {'dob': '14/11/1911', 'first_name': 'Liam', 'gender': 'Female', 'last_name': 'Jackson', ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_find_a_patient_steps.py:261: in step_add_mandatory_patient_information\n    enter_optional_postcode(shared_data[\"postcode\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npostcode = 'AB4 1ZR'\n\n    def enter_optional_postcode(postcode):\n>       input_text_into_element(POSTCODE_OPTIONAL_INPUT)\nE       TypeError: input_text_into_element() missing 1 required positional argument: 'text'\n\npages/find_a_patient_page.py:81: TypeError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1728478207274,
        "stop" : 1728478216383,
        "duration" : 9109
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I generate random data for a new patient",
      "time" : {
        "start" : 1728478216383,
        "stop" : 1728478216384,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the new patient details on find by demographics page",
      "time" : {
        "start" : 1728478216384,
        "stop" : 1728478221477,
        "duration" : 5093
      },
      "status" : "failed",
      "statusMessage" : "input_text_into_element() missing 1 required positional argument: 'text'",
      "statusTrace" : "TypeError: input_text_into_element() missing 1 required positional argument: 'text'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "8121528f60b7"
  }, {
    "name" : "thread",
    "value" : "1040-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c6557a9683e489e.json",
  "parameterValues" : [ ]
}