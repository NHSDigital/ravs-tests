{
  "uid" : "3d7d845d47af3a55",
  "name" : "Vaccine already added to site warning should appear [ALBERT HOUSE-COVID-19-Spikevax JN.1]",
  "fullName" : "/app/features/add_vaccines.feature:Vaccine already added to site warning should appear",
  "historyId" : "2dd9d1e1f9645f5bac0867e6fbf3869e",
  "time" : {
    "start" : 1728572959932,
    "stop" : 1728572994170,
    "duration" : 34238
  },
  "status" : "failed",
  "statusMessage" : "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_role(\"link\", name=\"Add vaccine\")",
  "statusTrace" : "fixturefunc = <function i_click_add_vaccine at 0x7fa4c987a8e0>\nrequest = <FixtureRequest for <Function test_Vaccine_already_added_to_site_warning_should_appear[ALBERT HOUSE-COVID-19-Spikevax JN.1]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_add_vaccine_steps.py:46: in i_click_add_vaccine\n    click_add_vaccine_button()\npages/vaccines_page.py:13: in click_add_vaccine_button\n    find_element_with_locator_and_perform_action(element,\"click\")\ninit_helpers.py:211: in find_element_with_locator_and_perform_action\n    return playwright_helper_instance.find_element_with_locator_and_perform_action(element, action, inputValue)\nhelpers/playwrightHelper.py:248: in find_element_with_locator_and_perform_action\n    element.click()\n.tox/py311/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15106: in click\n    self._sync(\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fa4c85ea650>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fa4c8132b60>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for get_by_role(\"link\", name=\"Add vaccine\")\n\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:514: TimeoutError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_role(\"link\", name=\"Add vaccine\")",
    "statusTrace" : "fixturefunc = <function i_click_add_vaccine at 0x7fa4c987a8e0>\nrequest = <FixtureRequest for <Function test_Vaccine_already_added_to_site_warning_should_appear[ALBERT HOUSE-COVID-19-Spikevax JN.1]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_add_vaccine_steps.py:46: in i_click_add_vaccine\n    click_add_vaccine_button()\npages/vaccines_page.py:13: in click_add_vaccine_button\n    find_element_with_locator_and_perform_action(element,\"click\")\ninit_helpers.py:211: in find_element_with_locator_and_perform_action\n    return playwright_helper_instance.find_element_with_locator_and_perform_action(element, action, inputValue)\nhelpers/playwrightHelper.py:248: in find_element_with_locator_and_perform_action\n    element.click()\n.tox/py311/lib/python3.11/site-packages/playwright/sync_api/_generated.py:15106: in click\n    self._sync(\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fa4c85ea650>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fa4c8132b60>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for get_by_role(\"link\", name=\"Add vaccine\")\n\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:514: TimeoutError",
    "steps" : [ {
      "name" : "Given I am on the RAVS home page",
      "time" : {
        "start" : 1728572959933,
        "stop" : 1728572961946,
        "duration" : 2013
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When I am on the vaccines page",
      "time" : {
        "start" : 1728572961947,
        "stop" : 1728572964164,
        "duration" : 2217
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click add vaccine button",
      "time" : {
        "start" : 1728572964164,
        "stop" : 1728572994170,
        "duration" : 30006
      },
      "status" : "failed",
      "statusMessage" : "Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_role(\"link\", name=\"Add vaccine\")\n",
      "statusTrace" : "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_role(\"link\", name=\"Add vaccine\")\n\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "5b6cd6d26fab"
  }, {
    "name" : "thread",
    "value" : "1040-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Add vaccine to site"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "site",
    "value" : "ALBERT HOUSE"
  }, {
    "name" : "vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "vaccineType",
    "value" : "Spikevax JN.1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3d7d845d47af3a55.json",
  "parameterValues" : [ "ALBERT HOUSE", "COVID-19", "Spikevax JN.1" ]
}