{
  "uid" : "c6fb1dae88888e50",
  "name" : "Search by NHS number [9469998626-JONNY CONOPO-20150305-1 DAISY BANK, LANCASTER, LA1 3JW]",
  "fullName" : "/app/features/find_a_patient.feature:Search by NHS number",
  "historyId" : "f312e1d375b46f243b4eeb052610663a",
  "time" : {
    "start" : 1730112279525,
    "stop" : 1730112294297,
    "duration" : 14772
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9469998626', True)",
  "statusTrace" : "fixturefunc = <function patient_information_page_should_be_available at 0x7f4561962ac0>\nrequest = <FixtureRequest for <Function test_search_by_nhs_number[9469998626-JONNY CONOPO-20150305-1 DAISY BANK, LANCASTER, LA1 3JW]>>\nkwargs = {'address': '1 DAISY BANK, LANCASTER, LA1 3JW', 'dob': '20150305', 'name': 'JONNY CONOPO', 'nhsNumber': '9469998626'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'JONNY CONOPO', nhsNumber = '9469998626', dob = '20150305'\naddress = '1 DAISY BANK, LANCASTER, LA1 3JW'\n\n    @then(parse(\"I should be directed to the patient's information page and show {name}, {nhsNumber}, {dob} and {address} details\"))\n    def patient_information_page_should_be_available(name, nhsNumber, dob, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n        if name.lower() != \"Not found\".lower():\n>           assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE           AssertionError: assert False == True\nE            +  where False = check_patient_nhs_number_search_result_exists('9469998626', True)\n\ntests/test_find_a_patient_steps.py:183: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9469998626', True)",
    "statusTrace" : "fixturefunc = <function patient_information_page_should_be_available at 0x7f4561962ac0>\nrequest = <FixtureRequest for <Function test_search_by_nhs_number[9469998626-JONNY CONOPO-20150305-1 DAISY BANK, LANCASTER, LA1 3JW]>>\nkwargs = {'address': '1 DAISY BANK, LANCASTER, LA1 3JW', 'dob': '20150305', 'name': 'JONNY CONOPO', 'nhsNumber': '9469998626'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'JONNY CONOPO', nhsNumber = '9469998626', dob = '20150305'\naddress = '1 DAISY BANK, LANCASTER, LA1 3JW'\n\n    @then(parse(\"I should be directed to the patient's information page and show {name}, {nhsNumber}, {dob} and {address} details\"))\n    def patient_information_page_should_be_available(name, nhsNumber, dob, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n        if name.lower() != \"Not found\".lower():\n>           assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE           AssertionError: assert False == True\nE            +  where False = check_patient_nhs_number_search_result_exists('9469998626', True)\n\ntests/test_find_a_patient_steps.py:183: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by nhs number page",
      "time" : {
        "start" : 1730112279525,
        "stop" : 1730112283891,
        "duration" : 4366
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When I enter a valid 9469998626",
      "time" : {
        "start" : 1730112283892,
        "stop" : 1730112283959,
        "duration" : 67
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click the search button",
      "time" : {
        "start" : 1730112283960,
        "stop" : 1730112284057,
        "duration" : 97
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I should be directed to the patient's information page and show JONNY CONOPO, 9469998626, 20150305 and 1 DAISY BANK, LANCASTER, LA1 3JW details",
      "time" : {
        "start" : 1730112284058,
        "stop" : 1730112294297,
        "duration" : 10239
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9469998626', True)",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9469998626', True)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "85ef24d0e33282bc",
        "name" : "dev_chrome_130.0.6723.69_patient_information_page_should_be_visible.png",
        "source" : "85ef24d0e33282bc.png",
        "type" : "image/png",
        "size" : 48573
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "f275d578dd116eba",
      "name" : "log",
      "source" : "f275d578dd116eba.txt",
      "type" : "text/plain",
      "size" : 1746
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "9fd36c357a1d"
  }, {
    "name" : "thread",
    "value" : "1102-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "1 DAISY BANK, LANCASTER, LA1 3JW"
  }, {
    "name" : "dateofbirth",
    "value" : "20150305"
  }, {
    "name" : "name",
    "value" : "JONNY CONOPO"
  }, {
    "name" : "nhsNumber",
    "value" : "9469998626"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c6fb1dae88888e50.json",
  "parameterValues" : [ "1 DAISY BANK, LANCASTER, LA1 3JW", "20150305", "JONNY CONOPO", "9469998626" ]
}