{
  "uid" : "3a6c8e45082928d4",
  "name" : "Local: Created patient can be found using local search",
  "fullName" : "/app/features/find_a_patient.feature:Local: Created patient can be found using local search",
  "historyId" : "318f11c97be2b8bb6bebbd84c9bce5b1",
  "time" : {
    "start" : 1729601394832,
    "stop" : 1729601429583,
    "duration" : 34751
  },
  "status" : "failed",
  "statusMessage" : "Failed: An error occurred: Locator.is_visible: SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]' is not a valid XPath expression.\n    at Object.queryAll (<anonymous>:41:25)\n    at InjectedScript._queryEngineAll (<anonymous>:5163:49)\n    at InjectedScript.querySelectorAll (<anonymous>:5150:30)\n    at InjectedScript.querySelector (<anonymous>:5089:25)\n    at eval (eval at evaluate (:234:30), <anonymous>:5:34)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\nCall log:\n  checking visibility of locator(\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\")",
  "statusTrace" : "element = <Locator frame=<Frame name= url='https://www.ravs-dev.england.nhs.uk/patient/search/records'> selector=\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\">\nwait = True\n\n    def check_element_exists(element, wait=False):\n        if isinstance(element, (tuple, list)):\n            element = get_element_by_type(*element)\n        elif isinstance(element, str):\n            element = get_element_by_type(element)\n        try:\n>           return playwright_helper_instance.check_element_exists(element, wait)\n\ninit_helpers.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelpers/playwrightHelper.py:167: in check_element_exists\n    is_visible = element.is_visible()\n.tox/py311/lib/python3.11/site-packages/playwright/sync_api/_generated.py:17017: in is_visible\n    self._sync(self._impl_obj.is_visible(timeout=timeout))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_locator.py:500: in is_visible\n    return await self._frame.is_visible(\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_frame.py:354: in is_visible\n    return await self._channel.send(\"isVisible\", locals_to_params(locals()))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7f28cd17a810>\ncb = <function Channel.send.<locals>.<lambda> at 0x7f28cc5200e0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: Locator.is_visible: SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]' is not a valid XPath expression.\nE               at Object.queryAll (<anonymous>:41:25)\nE               at InjectedScript._queryEngineAll (<anonymous>:5163:49)\nE               at InjectedScript.querySelectorAll (<anonymous>:5150:30)\nE               at InjectedScript.querySelector (<anonymous>:5089:25)\nE               at eval (eval at evaluate (:234:30), <anonymous>:5:34)\nE               at UtilityScript.evaluate (<anonymous>:236:17)\nE               at UtilityScript.<anonymous> (<anonymous>:1:44)\nE           Call log:\nE             checking visibility of locator(\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\")\n\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:520: Error\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function step_patient_information_page_should_be_available at 0x7f28cd042980>\nrequest = <FixtureRequest for <Function test_local_created_patient_can_be_found_using_local_search>>\nkwargs = {'shared_data': {'dob': '1/7/1922', 'first_name': 'Wayne', 'gender': 'Unknown', 'last_name': \"O'Brien\", ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_find_a_patient_steps.py:189: in step_patient_information_page_should_be_available\n    assert check_patient_name_search_result_exists(name, True) == True\npages/find_a_patient_page.py:140: in check_patient_name_search_result_exists\n    return check_element_exists(element, wait)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nelement = <Locator frame=<Frame name= url='https://www.ravs-dev.england.nhs.uk/patient/search/records'> selector=\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\">\nwait = True\n\n    def check_element_exists(element, wait=False):\n        if isinstance(element, (tuple, list)):\n            element = get_element_by_type(*element)\n        elif isinstance(element, str):\n            element = get_element_by_type(element)\n        try:\n            return playwright_helper_instance.check_element_exists(element, wait)\n        except Exception as e:\n>           pytest.fail(f\"An error occurred: {e}\")\nE           Failed: An error occurred: Locator.is_visible: SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]' is not a valid XPath expression.\nE               at Object.queryAll (<anonymous>:41:25)\nE               at InjectedScript._queryEngineAll (<anonymous>:5163:49)\nE               at InjectedScript.querySelectorAll (<anonymous>:5150:30)\nE               at InjectedScript.querySelector (<anonymous>:5089:25)\nE               at eval (eval at evaluate (:234:30), <anonymous>:5:34)\nE               at UtilityScript.evaluate (<anonymous>:236:17)\nE               at UtilityScript.<anonymous> (<anonymous>:1:44)\nE           Call log:\nE             checking visibility of locator(\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\")\n\ninit_helpers.py:185: Failed",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Failed: An error occurred: Locator.is_visible: SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]' is not a valid XPath expression.\n    at Object.queryAll (<anonymous>:41:25)\n    at InjectedScript._queryEngineAll (<anonymous>:5163:49)\n    at InjectedScript.querySelectorAll (<anonymous>:5150:30)\n    at InjectedScript.querySelector (<anonymous>:5089:25)\n    at eval (eval at evaluate (:234:30), <anonymous>:5:34)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\nCall log:\n  checking visibility of locator(\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\")",
    "statusTrace" : "element = <Locator frame=<Frame name= url='https://www.ravs-dev.england.nhs.uk/patient/search/records'> selector=\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\">\nwait = True\n\n    def check_element_exists(element, wait=False):\n        if isinstance(element, (tuple, list)):\n            element = get_element_by_type(*element)\n        elif isinstance(element, str):\n            element = get_element_by_type(element)\n        try:\n>           return playwright_helper_instance.check_element_exists(element, wait)\n\ninit_helpers.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelpers/playwrightHelper.py:167: in check_element_exists\n    is_visible = element.is_visible()\n.tox/py311/lib/python3.11/site-packages/playwright/sync_api/_generated.py:17017: in is_visible\n    self._sync(self._impl_obj.is_visible(timeout=timeout))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_locator.py:500: in is_visible\n    return await self._frame.is_visible(\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_frame.py:354: in is_visible\n    return await self._channel.send(\"isVisible\", locals_to_params(locals()))\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7f28cd17a810>\ncb = <function Channel.send.<locals>.<lambda> at 0x7f28cc5200e0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: Locator.is_visible: SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]' is not a valid XPath expression.\nE               at Object.queryAll (<anonymous>:41:25)\nE               at InjectedScript._queryEngineAll (<anonymous>:5163:49)\nE               at InjectedScript.querySelectorAll (<anonymous>:5150:30)\nE               at InjectedScript.querySelector (<anonymous>:5089:25)\nE               at eval (eval at evaluate (:234:30), <anonymous>:5:34)\nE               at UtilityScript.evaluate (<anonymous>:236:17)\nE               at UtilityScript.<anonymous> (<anonymous>:1:44)\nE           Call log:\nE             checking visibility of locator(\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\")\n\n.tox/py311/lib/python3.11/site-packages/playwright/_impl/_connection.py:520: Error\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function step_patient_information_page_should_be_available at 0x7f28cd042980>\nrequest = <FixtureRequest for <Function test_local_created_patient_can_be_found_using_local_search>>\nkwargs = {'shared_data': {'dob': '1/7/1922', 'first_name': 'Wayne', 'gender': 'Unknown', 'last_name': \"O'Brien\", ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_find_a_patient_steps.py:189: in step_patient_information_page_should_be_available\n    assert check_patient_name_search_result_exists(name, True) == True\npages/find_a_patient_page.py:140: in check_patient_name_search_result_exists\n    return check_element_exists(element, wait)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nelement = <Locator frame=<Frame name= url='https://www.ravs-dev.england.nhs.uk/patient/search/records'> selector=\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\">\nwait = True\n\n    def check_element_exists(element, wait=False):\n        if isinstance(element, (tuple, list)):\n            element = get_element_by_type(*element)\n        elif isinstance(element, str):\n            element = get_element_by_type(element)\n        try:\n            return playwright_helper_instance.check_element_exists(element, wait)\n        except Exception as e:\n>           pytest.fail(f\"An error occurred: {e}\")\nE           Failed: An error occurred: Locator.is_visible: SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]' is not a valid XPath expression.\nE               at Object.queryAll (<anonymous>:41:25)\nE               at InjectedScript._queryEngineAll (<anonymous>:5163:49)\nE               at InjectedScript.querySelectorAll (<anonymous>:5150:30)\nE               at InjectedScript.querySelector (<anonymous>:5089:25)\nE               at eval (eval at evaluate (:234:30), <anonymous>:5:34)\nE               at UtilityScript.evaluate (<anonymous>:236:17)\nE               at UtilityScript.<anonymous> (<anonymous>:1:44)\nE           Call log:\nE             checking visibility of locator(\"//span[contains(translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'wayne o'brien')]\")\n\ninit_helpers.py:185: Failed",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1729601394832,
        "stop" : 1729601400945,
        "duration" : 6113
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I generate random data for a new patient",
      "time" : {
        "start" : 1729601400946,
        "stop" : 1729601400946,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the new patient details on find by demographics page",
      "time" : {
        "start" : 1729601400946,
        "stop" : 1729601412786,
        "duration" : 11840
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "180c662bc59954f6",
        "name" : "dev_chrome_130.0.6723.58_add_mandatory_new_patient_information.png",
        "source" : "180c662bc59954f6.png",
        "type" : "image/png",
        "size" : 50790
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I click the search button",
      "time" : {
        "start" : 1729601412786,
        "stop" : 1729601413055,
        "duration" : 269
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click the create a new patient button",
      "time" : {
        "start" : 1729601413056,
        "stop" : 1729601413860,
        "duration" : 804
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the new patient details on create a new patient page",
      "time" : {
        "start" : 1729601413861,
        "stop" : 1729601415600,
        "duration" : 1739
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "f64e7c6285fe5732",
        "name" : "dev_chrome_130.0.6723.58_add_mandatory_new_patient_information.png",
        "source" : "f64e7c6285fe5732.png",
        "type" : "image/png",
        "size" : 34681
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the check and confirm button",
      "time" : {
        "start" : 1729601415600,
        "stop" : 1729601415884,
        "duration" : 284
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can check and confirm the patient information is correct",
      "time" : {
        "start" : 1729601415885,
        "stop" : 1729601416534,
        "duration" : 649
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "79b5894fba059be1",
        "name" : "dev_chrome_130.0.6723.58_patient_information_is_correct.png",
        "source" : "79b5894fba059be1.png",
        "type" : "image/png",
        "size" : 37625
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the confirm and save button",
      "time" : {
        "start" : 1729601416535,
        "stop" : 1729601416824,
        "duration" : 289
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see the patient added confirmation message",
      "time" : {
        "start" : 1729601416825,
        "stop" : 1729601416953,
        "duration" : 128
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I click the find a patient by local records link",
      "time" : {
        "start" : 1729601416953,
        "stop" : 1729601417233,
        "duration" : 280
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter the new patient details",
      "time" : {
        "start" : 1729601417234,
        "stop" : 1729601429234,
        "duration" : 12000
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "7761011f78d33ac9",
        "name" : "dev_chrome_130.0.6723.58_add_mandatory_new_patient_information.png",
        "source" : "7761011f78d33ac9.png",
        "type" : "image/png",
        "size" : 44773
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the search button",
      "time" : {
        "start" : 1729601429234,
        "stop" : 1729601429468,
        "duration" : 234
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see the patient's local record in the search results",
      "time" : {
        "start" : 1729601429468,
        "stop" : 1729601429780,
        "duration" : 312
      },
      "status" : "skipped",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5175609501db0a6e",
        "name" : "dev_chrome_130.0.6723.58_patient_local_record_should_be_visible.png",
        "source" : "5175609501db0a6e.png",
        "type" : "image/png",
        "size" : 31400
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "75da69addf474500",
      "name" : "log",
      "source" : "75da69addf474500.txt",
      "type" : "text/plain",
      "size" : 6793
    } ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "attachmentsCount" : 6,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "7693c815db78"
  }, {
    "name" : "thread",
    "value" : "1099-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3a6c8e45082928d4.json",
  "parameterValues" : [ ]
}