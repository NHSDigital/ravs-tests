{
  "uid" : "a7014ebaa5f92c0d",
  "name" : "NHS Number: Existing patients can be found using their NHS number [9693632109-Bill GARTON-23/6/1946-1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW]",
  "fullName" : "/app/features/find_a_patient.feature:NHS Number: Existing patients can be found using their NHS number",
  "historyId" : "4ba979ba023ccc2aa0df2d57f427a85c",
  "time" : {
    "start" : 1730888693170,
    "stop" : 1730888707610,
    "duration" : 14440
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9693632109', True)",
  "statusTrace" : "fixturefunc = <function step_patient_information_page_should_be_available at 0x7f58f8f22160>\nrequest = <FixtureRequest for <Function test_nhs_number_existing_patients_can_be_found_using_their_nhs_number[9693632109-Bill GARTON-23/6/1946-1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW]>>\nkwargs = {'address': '1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW', 'dob': '23/6/1946', 'name': 'Bill GARTON', 'nhsNumber': '9693632109'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'Bill GARTON', nhsNumber = '9693632109', dob = '23/6/1946'\naddress = '1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW'\n\n    @then(parse(\"I can see the patient's information in the search results, showing their name: {name}, nhs number: {nhsNumber}, dob: {dob} and address: {address}\"))\n    def step_patient_information_page_should_be_available(name, nhsNumber, dob, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n>       assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE       AssertionError: assert False == True\nE        +  where False = check_patient_nhs_number_search_result_exists('9693632109', True)\n\ntests/test_find_a_patient_steps.py:172: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9693632109', True)",
    "statusTrace" : "fixturefunc = <function step_patient_information_page_should_be_available at 0x7f58f8f22160>\nrequest = <FixtureRequest for <Function test_nhs_number_existing_patients_can_be_found_using_their_nhs_number[9693632109-Bill GARTON-23/6/1946-1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW]>>\nkwargs = {'address': '1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW', 'dob': '23/6/1946', 'name': 'Bill GARTON', 'nhsNumber': '9693632109'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'Bill GARTON', nhsNumber = '9693632109', dob = '23/6/1946'\naddress = '1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW'\n\n    @then(parse(\"I can see the patient's information in the search results, showing their name: {name}, nhs number: {nhsNumber}, dob: {dob} and address: {address}\"))\n    def step_patient_information_page_should_be_available(name, nhsNumber, dob, address):\n        attach_screenshot(\"patient_information_page_should_be_visible\")\n>       assert check_patient_nhs_number_search_result_exists(nhsNumber, True) == True\nE       AssertionError: assert False == True\nE        +  where False = check_patient_nhs_number_search_result_exists('9693632109', True)\n\ntests/test_find_a_patient_steps.py:172: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by nhs number page",
      "time" : {
        "start" : 1730888693170,
        "stop" : 1730888697177,
        "duration" : 4007
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "And I enter 9693632109 as the nhs number",
      "time" : {
        "start" : 1730888697178,
        "stop" : 1730888697254,
        "duration" : 76
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When I click the search button",
      "time" : {
        "start" : 1730888697255,
        "stop" : 1730888697347,
        "duration" : 92
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see the patient's information in the search results, showing their name: Bill GARTON, nhs number: 9693632109, dob: 23/6/1946 and address: 1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW",
      "time" : {
        "start" : 1730888697348,
        "stop" : 1730888707610,
        "duration" : 10262
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9693632109', True)",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_patient_nhs_number_search_result_exists('9693632109', True)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e43495ce4697e966",
        "name" : "dev_chrome_130.0.6723.116_patient_information_page_should_be_visible.png",
        "source" : "e43495ce4697e966.png",
        "type" : "image/png",
        "size" : 48715
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "7e44a9a6d1bf41b0",
      "name" : "log",
      "source" : "7e44a9a6d1bf41b0.txt",
      "type" : "text/plain",
      "size" : 1863
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "8e9bc332e944"
  }, {
    "name" : "thread",
    "value" : "1096-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW"
  }, {
    "name" : "dateofbirth",
    "value" : "23/6/1946"
  }, {
    "name" : "name",
    "value" : "Bill GARTON"
  }, {
    "name" : "nhsNumber",
    "value" : "9693632109"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a7014ebaa5f92c0d.json",
  "parameterValues" : [ "1 MOUNT AVENUE, BARTON-UPON-HUMBER, S HUMBERSIDE, DN18 5DW", "23/6/1946", "Bill GARTON", "9693632109" ]
}