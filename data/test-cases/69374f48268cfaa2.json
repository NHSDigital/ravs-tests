{
  "uid" : "69374f48268cfaa2",
  "name" : "Demographics: Search does not find existing patients if any of their details are wrong [dob - year-Bill-Garton-23/6/1991-DN18 5DW-Male]",
  "fullName" : "/app/features/find_a_patient.feature:Demographics: Search does not find existing patients if any of their details are wrong",
  "historyId" : "fdc6348f6e402d3e01a58246f0276887",
  "time" : {
    "start" : 1726990466957,
    "stop" : 1726990594654,
    "duration" : 127697
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_not_found_message_exists(True)",
  "statusTrace" : "fixturefunc = <function step_assert_no_results_found_for_patient_message at 0x7efed5cf19e0>\nrequest = <FixtureRequest for <Function test_demographics_search_does_not_find_existing_patients_if_any_of_their_details_are_wrong[dob - year-Bill-Garton-23/6/1991-DN18 5DW-Male]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then(\"I can see a message that no results are found for the patient\")\n    def step_assert_no_results_found_for_patient_message():\n        attach_screenshot(\"no_results_found_should_be_visible\")\n>       assert check_patient_not_found_message_exists(True) == True\nE       assert False == True\nE        +  where False = check_patient_not_found_message_exists(True)\n\ntests/test_find_a_patient_steps.py:215: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = check_patient_not_found_message_exists(True)",
    "statusTrace" : "fixturefunc = <function step_assert_no_results_found_for_patient_message at 0x7efed5cf19e0>\nrequest = <FixtureRequest for <Function test_demographics_search_does_not_find_existing_patients_if_any_of_their_details_are_wrong[dob - year-Bill-Garton-23/6/1991-DN18 5DW-Male]>>\nkwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @then(\"I can see a message that no results are found for the patient\")\n    def step_assert_no_results_found_for_patient_message():\n        attach_screenshot(\"no_results_found_should_be_visible\")\n>       assert check_patient_not_found_message_exists(True) == True\nE       assert False == True\nE        +  where False = check_patient_not_found_message_exists(True)\n\ntests/test_find_a_patient_steps.py:215: AssertionError",
    "steps" : [ {
      "name" : "Given I am on the find a patient by demographics page",
      "time" : {
        "start" : 1726990466957,
        "stop" : 1726990561630,
        "duration" : 94673
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b4b68d2e021e01b1",
        "name" : "qa_chrome_129.0.6668.58_user_has_selected_site.png",
        "source" : "b4b68d2e021e01b1.png",
        "type" : "image/png",
        "size" : 59238
      }, {
        "uid" : "2de13772a405d298",
        "name" : "qa_chrome_129.0.6668.58_user_has_selected_care_model.png",
        "source" : "2de13772a405d298.png",
        "type" : "image/png",
        "size" : 59238
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I enter the mandatory patient details Bill, Garton, and 23/6/1991",
      "time" : {
        "start" : 1726990561631,
        "stop" : 1726990563294,
        "duration" : 1663
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d3e6b2b03c89c514",
        "name" : "qa_chrome_129.0.6668.58_add_mandatory_patient_information.png",
        "source" : "d3e6b2b03c89c514.png",
        "type" : "image/png",
        "size" : 85840
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I enter the postcode DN18 5DW",
      "time" : {
        "start" : 1726990563294,
        "stop" : 1726990563745,
        "duration" : 451
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a716db0014be95f6",
        "name" : "qa_chrome_129.0.6668.58_enter_postcode.png",
        "source" : "a716db0014be95f6.png",
        "type" : "image/png",
        "size" : 87639
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I select the gender Male",
      "time" : {
        "start" : 1726990563746,
        "stop" : 1726990564177,
        "duration" : 431
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9d6c3b898c780fa3",
        "name" : "qa_chrome_129.0.6668.58_select_gender.png",
        "source" : "9d6c3b898c780fa3.png",
        "type" : "image/png",
        "size" : 87108
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click the search button",
      "time" : {
        "start" : 1726990564178,
        "stop" : 1726990564513,
        "duration" : 335
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Then I can see a message that no results are found for the patient",
      "time" : {
        "start" : 1726990564513,
        "stop" : 1726990594654,
        "duration" : 30141
      },
      "status" : "failed",
      "statusMessage" : "assert False == True\n +  where False = check_patient_not_found_message_exists(True)",
      "statusTrace" : "AssertionError: assert False == True\n +  where False = check_patient_not_found_message_exists(True)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c2b1357a8bcf5d0e",
        "name" : "qa_chrome_129.0.6668.58_no_results_found_should_be_visible.png",
        "source" : "c2b1357a8bcf5d0e.png",
        "type" : "image/png",
        "size" : 86899
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 6,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "f2a6510bab53"
  }, {
    "name" : "thread",
    "value" : "1044-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Find a patient"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "dob",
    "value" : "23/6/1991"
  }, {
    "name" : "firstName",
    "value" : "Bill"
  }, {
    "name" : "gender",
    "value" : "Male"
  }, {
    "name" : "lastName",
    "value" : "Garton"
  }, {
    "name" : "postcode",
    "value" : "DN18 5DW"
  }, {
    "name" : "scenario",
    "value" : "dob - year"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "69374f48268cfaa2.json",
  "parameterValues" : [ "23/6/1991", "Bill", "Male", "Garton", "DN18 5DW", "dob - year" ]
}