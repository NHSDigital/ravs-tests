{
  "uid" : "1616f8c7c986c26",
  "name" : "Record a vaccine with nhs number [4-9472710255-BECCLES HOUSE-Housebound patient's home-yes-today-3-yes-yes-today-2-DELICE PINKER-10/11/1926-HARDCRAGG HOUSE, HARDCRAGG WAY, GRANGE-OVER-SANDS, CUMBRIA, LA11 6BH-COVID-19-AUTOMATION-SJ1-19/10/2026]",
  "fullName" : "/app/features/record_a_vaccine_for_patient_with_nhs_number.feature:Record a vaccine with nhs number",
  "historyId" : "be8754a3c45b355caf3fb54bb9553a90",
  "time" : {
    "start" : 1731678300785,
    "stop" : 1731678334449,
    "duration" : 33664
  },
  "status" : "failed",
  "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
  "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f47aa14f380>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[4-9472710255-BECCLES HOUSE-Housebound patient's ho...R-10/11/1926-HARDCRAGG HOUSE, HARDCRAGG WAY, GRANGE-OVER-SANDS, CUMBRIA, LA11 6BH-COVID-19-AUTOMATION-SJ1-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 12/11/2024DELICE PINKER', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-SJ1', 'care_model': \"Housebound patient's home\", ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = \"Clinician following the Mental Capacity Act (in the patient's best interests)\"\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Recorder - neelima.guntupalli1+recorder_automated@nhs.net'\nlegal_mechanism = 'National Protocol (NP)'\nno_consent_reason = 'Having elsewhere / Had Vaccination'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
    "statusTrace" : "fixturefunc = <function step_record_consent_and_click_continue_to_vaccinate_screen at 0x7f47aa14f380>\nrequest = <FixtureRequest for <Function test_record_a_vaccine_with_nhs_number[4-9472710255-BECCLES HOUSE-Housebound patient's ho...R-10/11/1926-HARDCRAGG HOUSE, HARDCRAGG WAY, GRANGE-OVER-SANDS, CUMBRIA, LA11 6BH-COVID-19-AUTOMATION-SJ1-19/10/2026]>>\nkwargs = {'consent': 'yes', 'shared_data': {'assessment_comments': 'Assessment comments 12/11/2024DELICE PINKER', 'batch_expiry_date': '19/10/2026', 'batch_number': 'AUTOMATION-SJ1', 'care_model': \"Housebound patient's home\", ...}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.tox/py311/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_record_a_vaccine_for_patient_with_nhs_number_steps.py:121: in step_record_consent_and_click_continue_to_vaccinate_screen\n    record_consent_details_and_click_continue_to_vaccinate(shared_data['consent_decision'],shared_data['consent_given_by'], name_of_person_consenting, relationship_to_patient, shared_data['consent_clinician_details'], shared_data['legal_mechanism'], shared_data[\"no_consent_reason\"])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconsent_decision = 'yes'\nconsent_given_by = \"Clinician following the Mental Capacity Act (in the patient's best interests)\"\nperson_consenting_name = 'Automation tester'\nrelationship_to_patient = 'RAVS tester'\nconsent_clinician = 'Automated Recorder - neelima.guntupalli1+recorder_automated@nhs.net'\nlegal_mechanism = 'National Protocol (NP)'\nno_consent_reason = 'Having elsewhere / Had Vaccination'\n\n    def record_consent_details_and_click_continue_to_vaccinate(consent_decision,  consent_given_by, person_consenting_name, relationship_to_patient,  consent_clinician, legal_mechanism, no_consent_reason=None):\n        attach_screenshot(\"before_selecting_consent_clinician\")\n    \n        logging.debug(\"Consent clinician to select is: \" + consent_clinician)\n        logging.debug(\"Consent legal mechanism is: \" + legal_mechanism)\n    \n        if (legal_mechanism) != \"Patient Group Direction (PGD)\":\n            select_consent_clinician_with_name_and_council(consent_clinician)\n            attach_screenshot(\"selected_consent_clinician_with_name_and_council\")\n    \n        if consent_decision.lower() == 'yes':\n            click_yes_to_consent()\n            attach_screenshot(\"clicked_yes_to_consent\")\n            select_consent_given_by_from_dropdown(consent_given_by)\n            attach_screenshot(\"selected_consent_given_by_from_dropdown\")\n    \n            if consent_given_by != \"Patient (informed consent)\":\n                enter_person_consenting_details(person_consenting_name)\n                attach_screenshot(\"entered_person_consenting_details\")\n                enter_relationship_to_patient(relationship_to_patient)\n>               add_vaccine_type_batch(\"entered_relationship_to_patient\")\nE               TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n\nconftest.py:347: TypeError",
    "steps" : [ {
      "name" : "Given I login to RAVS and set vaccinator details with BECCLES HOUSE and Housebound patient's home and get patient details for 9472710255 with option 4 and choose to vaccinate with vaccine details as COVID-19, AUTOMATION-SJ1 with 19/10/2026",
      "time" : {
        "start" : 1731678300787,
        "stop" : 1731678305174,
        "duration" : 4387
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "646486aacc62a31e",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccines_nav_link.png",
        "source" : "646486aacc62a31e.png",
        "type" : "image/png",
        "size" : 46598
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I search for a patient with the NHS number in the find a patient screen",
      "time" : {
        "start" : 1731678305174,
        "stop" : 1731678311071,
        "duration" : 5897
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b05810bf9f8fb990",
        "name" : "qa_edge_131.0.2903.48_entered_nhs_number_as9472710255_and_clicked_search_for_patient_button.png",
        "source" : "b05810bf9f8fb990.png",
        "type" : "image/png",
        "size" : 48878
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I open the patient record by clicking on patient DELICE PINKER",
      "time" : {
        "start" : 1731678311071,
        "stop" : 1731678313371,
        "duration" : 2300
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e3725a5cd8c2eeca",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "e3725a5cd8c2eeca.png",
        "type" : "image/png",
        "size" : 48878
      }, {
        "uid" : "ae518acea47fe820",
        "name" : "qa_edge_131.0.2903.48_before_clicking_patient_name.png",
        "source" : "ae518acea47fe820.png",
        "type" : "image/png",
        "size" : 54714
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "When I click choose vaccine button and choose the COVID-19, AUTOMATION-SJ1 with 19/10/2026 and click continue",
      "time" : {
        "start" : 1731678313372,
        "stop" : 1731678324821,
        "duration" : 11449
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e387d7a8f87c518f",
        "name" : "qa_edge_131.0.2903.48_immunisation_history_records_count_is_4.png",
        "source" : "e387d7a8f87c518f.png",
        "type" : "image/png",
        "size" : 54714
      }, {
        "uid" : "383a840e51858806",
        "name" : "qa_edge_131.0.2903.48_clicked_choose_vaccine_button.png",
        "source" : "383a840e51858806.png",
        "type" : "image/png",
        "size" : 82018
      }, {
        "uid" : "8f6cc4e8e12d9ca0",
        "name" : "qa_edge_131.0.2903.48_clicked_on_patient_DELICE PINKER_and_clicked_choose_vaccine_button.png",
        "source" : "8f6cc4e8e12d9ca0.png",
        "type" : "image/png",
        "size" : 82018
      }, {
        "uid" : "fb40b27cef61098d",
        "name" : "qa_edge_131.0.2903.48_clicked_delivery_team.png",
        "source" : "fb40b27cef61098d.png",
        "type" : "image/png",
        "size" : 83389
      }, {
        "uid" : "114d055227ea005d",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine.png",
        "source" : "114d055227ea005d.png",
        "type" : "image/png",
        "size" : 54905
      }, {
        "uid" : "8d3396039dcb6f1d",
        "name" : "qa_edge_131.0.2903.48_clicked_vaccine_type.png",
        "source" : "8d3396039dcb6f1d.png",
        "type" : "image/png",
        "size" : 57398
      }, {
        "uid" : "9a138335727ed660",
        "name" : "qa_edge_131.0.2903.48_selected_vaccine_COVID-19_and_Spikevax JN.1_and_clicked_continue_button.png",
        "source" : "9a138335727ed660.png",
        "type" : "image/png",
        "size" : 75691
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 7,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I assess the patient's yes with the details and date as today-3 and click continue to record consent screen button",
      "time" : {
        "start" : 1731678324822,
        "stop" : 1731678331055,
        "duration" : 6233
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "8f2a191701ae3ba7",
        "name" : "qa_edge_131.0.2903.48_clicked_eligible_yes_radiobutton.png",
        "source" : "8f2a191701ae3ba7.png",
        "type" : "image/png",
        "size" : 71725
      }, {
        "uid" : "c8e4ea5996a7c0af",
        "name" : "qa_edge_131.0.2903.48_selected_eligibility_type.png",
        "source" : "c8e4ea5996a7c0af.png",
        "type" : "image/png",
        "size" : 72809
      }, {
        "uid" : "44ec9c06df5fd8b1",
        "name" : "qa_edge_131.0.2903.48_clicked_eligibility_yes_and_selected_eligibility_type.png",
        "source" : "44ec9c06df5fd8b1.png",
        "type" : "image/png",
        "size" : 72809
      }, {
        "uid" : "528af5ffab88dbe8",
        "name" : "qa_edge_131.0.2903.48_set_assessment_date.png",
        "source" : "528af5ffab88dbe8.png",
        "type" : "image/png",
        "size" : 72469
      }, {
        "uid" : "27edd5f4af79f79",
        "name" : "qa_edge_131.0.2903.48_clicked_legal_mechanism.png",
        "source" : "27edd5f4af79f79.png",
        "type" : "image/png",
        "size" : 79336
      }, {
        "uid" : "75c8ed7250cd36a9",
        "name" : "qa_edge_131.0.2903.48_selected_assessing_clinician_with_name_and_council.png",
        "source" : "75c8ed7250cd36a9.png",
        "type" : "image/png",
        "size" : 82307
      }, {
        "uid" : "57a33ecd96ffb5e",
        "name" : "qa_edge_131.0.2903.48_clicked_patient_give_vaccine_radio_button.png",
        "source" : "57a33ecd96ffb5e.png",
        "type" : "image/png",
        "size" : 52177
      }, {
        "uid" : "a620512dea3116bc",
        "name" : "qa_edge_131.0.2903.48_entered_comments_for_assessing_patient.png",
        "source" : "a620512dea3116bc.png",
        "type" : "image/png",
        "size" : 55881
      }, {
        "uid" : "da8fee129c4ce7e2",
        "name" : "qa_edge_131.0.2903.48_clicked_continue_to_record_consent_button.png",
        "source" : "da8fee129c4ce7e2.png",
        "type" : "image/png",
        "size" : 43464
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "And I record yes with the details and click continue to vaccinate button",
      "time" : {
        "start" : 1731678331055,
        "stop" : 1731678334449,
        "duration" : 3394
      },
      "status" : "failed",
      "statusMessage" : "add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'",
      "statusTrace" : "TypeError: add_vaccine_type_batch() missing 1 required positional argument: 'expiry_date'\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b735e815539af8a7",
        "name" : "qa_edge_131.0.2903.48_before_selecting_consent_clinician.png",
        "source" : "b735e815539af8a7.png",
        "type" : "image/png",
        "size" : 43464
      }, {
        "uid" : "350cd78a22f8cf90",
        "name" : "qa_edge_131.0.2903.48_selected_consent_clinician_with_name_and_council.png",
        "source" : "350cd78a22f8cf90.png",
        "type" : "image/png",
        "size" : 46474
      }, {
        "uid" : "535d907b8854ffef",
        "name" : "qa_edge_131.0.2903.48_clicked_yes_to_consent.png",
        "source" : "535d907b8854ffef.png",
        "type" : "image/png",
        "size" : 74503
      }, {
        "uid" : "f855772296fefc7e",
        "name" : "qa_edge_131.0.2903.48_selected_consent_given_by_from_dropdown.png",
        "source" : "f855772296fefc7e.png",
        "type" : "image/png",
        "size" : 77588
      }, {
        "uid" : "18e8d3acbcc9aa71",
        "name" : "qa_edge_131.0.2903.48_entered_person_consenting_details.png",
        "source" : "18e8d3acbcc9aa71.png",
        "type" : "image/png",
        "size" : 78792
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "2c31596d40fefcd6",
      "name" : "log",
      "source" : "2c31596d40fefcd6.txt",
      "type" : "text/plain",
      "size" : 14428
    } ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 26,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "d663d667dee7"
  }, {
    "name" : "thread",
    "value" : "1099-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest-bdd"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "feature",
    "value" : "Record vaccine"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "address",
    "value" : "HARDCRAGG HOUSE, HARDCRAGG WAY, GRANGE-OVER-SANDS, CUMBRIA, LA11 6BH"
  }, {
    "name" : "assess_date",
    "value" : "today-3"
  }, {
    "name" : "batch_expiry_date",
    "value" : "19/10/2026"
  }, {
    "name" : "batch_number",
    "value" : "AUTOMATION-SJ1"
  }, {
    "name" : "care_model",
    "value" : "Housebound patient's home"
  }, {
    "name" : "chosen_vaccine",
    "value" : "COVID-19"
  }, {
    "name" : "consent",
    "value" : "yes"
  }, {
    "name" : "dob",
    "value" : "10/11/1926"
  }, {
    "name" : "eligibility",
    "value" : "yes"
  }, {
    "name" : "index",
    "value" : "4"
  }, {
    "name" : "name",
    "value" : "DELICE PINKER"
  }, {
    "name" : "nhs_number",
    "value" : "9472710255"
  }, {
    "name" : "site",
    "value" : "BECCLES HOUSE"
  }, {
    "name" : "vaccination",
    "value" : "yes"
  }, {
    "name" : "vaccination_date",
    "value" : "today-2"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1616f8c7c986c26.json",
  "parameterValues" : [ "HARDCRAGG HOUSE, HARDCRAGG WAY, GRANGE-OVER-SANDS, CUMBRIA, LA11 6BH", "today-3", "19/10/2026", "AUTOMATION-SJ1", "Housebound patient's home", "COVID-19", "yes", "10/11/1926", "yes", "4", "DELICE PINKER", "9472710255", "BECCLES HOUSE", "yes", "today-2" ]
}